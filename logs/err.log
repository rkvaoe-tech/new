2025-09-19T21:07:28:  ⨯ Failed to start server
2025-09-19T21:07:28: Error: listen EADDRINUSE: address already in use :::3000
2025-09-19T21:07:28:     at <unknown> (Error: listen EADDRINUSE: address already in use :::3000)
2025-09-19T21:07:28:     at new Promise (<anonymous>) {
2025-09-19T21:07:28:   code: 'EADDRINUSE',
2025-09-19T21:07:28:   errno: -98,
2025-09-19T21:07:28:   syscall: 'listen',
2025-09-19T21:07:28:   address: '::',
2025-09-19T21:07:28:   port: 3000
2025-09-19T21:07:28: }
2025-09-19T21:07:30:  ⨯ Failed to start server
2025-09-19T21:07:30: Error: listen EADDRINUSE: address already in use :::3000
2025-09-19T21:07:30:     at <unknown> (Error: listen EADDRINUSE: address already in use :::3000)
2025-09-19T21:07:30:     at new Promise (<anonymous>) {
2025-09-19T21:07:30:   code: 'EADDRINUSE',
2025-09-19T21:07:30:   errno: -98,
2025-09-19T21:07:30:   syscall: 'listen',
2025-09-19T21:07:30:   address: '::',
2025-09-19T21:07:30:   port: 3000
2025-09-19T21:07:30: }
2025-09-19T21:07:31:  ⨯ Failed to start server
2025-09-19T21:07:32: Error: listen EADDRINUSE: address already in use :::3000
2025-09-19T21:07:32:     at <unknown> (Error: listen EADDRINUSE: address already in use :::3000)
2025-09-19T21:07:32:     at new Promise (<anonymous>) {
2025-09-19T21:07:32:   code: 'EADDRINUSE',
2025-09-19T21:07:32:   errno: -98,
2025-09-19T21:07:32:   syscall: 'listen',
2025-09-19T21:07:32:   address: '::',
2025-09-19T21:07:32:   port: 3000
2025-09-19T21:07:32: }
2025-09-19T21:07:33:  ⨯ Failed to start server
2025-09-19T21:07:33: Error: listen EADDRINUSE: address already in use :::3000
2025-09-19T21:07:33:     at <unknown> (Error: listen EADDRINUSE: address already in use :::3000)
2025-09-19T21:07:33:     at new Promise (<anonymous>) {
2025-09-19T21:07:33:   code: 'EADDRINUSE',
2025-09-19T21:07:33:   errno: -98,
2025-09-19T21:07:33:   syscall: 'listen',
2025-09-19T21:07:33:   address: '::',
2025-09-19T21:07:33:   port: 3000
2025-09-19T21:07:33: }
2025-09-19T21:07:35:  ⨯ Failed to start server
2025-09-19T21:07:35: Error: listen EADDRINUSE: address already in use :::3000
2025-09-19T21:07:35:     at <unknown> (Error: listen EADDRINUSE: address already in use :::3000)
2025-09-19T21:07:35:     at new Promise (<anonymous>) {
2025-09-19T21:07:35:   code: 'EADDRINUSE',
2025-09-19T21:07:35:   errno: -98,
2025-09-19T21:07:35:   syscall: 'listen',
2025-09-19T21:07:35:   address: '::',
2025-09-19T21:07:35:   port: 3000
2025-09-19T21:07:35: }
2025-09-19T21:08:29:  ⨯ Failed to start server
2025-09-19T21:08:29: Error: listen EADDRINUSE: address already in use :::3000
2025-09-19T21:08:29:     at <unknown> (Error: listen EADDRINUSE: address already in use :::3000)
2025-09-19T21:08:29:     at new Promise (<anonymous>) {
2025-09-19T21:08:29:   code: 'EADDRINUSE',
2025-09-19T21:08:29:   errno: -98,
2025-09-19T21:08:29:   syscall: 'listen',
2025-09-19T21:08:29:   address: '::',
2025-09-19T21:08:29:   port: 3000
2025-09-19T21:08:29: }
2025-09-19T21:08:31:  ⨯ Failed to start server
2025-09-19T21:08:31: Error: listen EADDRINUSE: address already in use :::3000
2025-09-19T21:08:31:     at <unknown> (Error: listen EADDRINUSE: address already in use :::3000)
2025-09-19T21:08:31:     at new Promise (<anonymous>) {
2025-09-19T21:08:31:   code: 'EADDRINUSE',
2025-09-19T21:08:31:   errno: -98,
2025-09-19T21:08:31:   syscall: 'listen',
2025-09-19T21:08:31:   address: '::',
2025-09-19T21:08:31:   port: 3000
2025-09-19T21:08:31: }
2025-09-19T21:08:33:  ⨯ Failed to start server
2025-09-19T21:08:33: Error: listen EADDRINUSE: address already in use :::3000
2025-09-19T21:08:33:     at <unknown> (Error: listen EADDRINUSE: address already in use :::3000)
2025-09-19T21:08:33:     at new Promise (<anonymous>) {
2025-09-19T21:08:33:   code: 'EADDRINUSE',
2025-09-19T21:08:33:   errno: -98,
2025-09-19T21:08:33:   syscall: 'listen',
2025-09-19T21:08:33:   address: '::',
2025-09-19T21:08:33:   port: 3000
2025-09-19T21:08:33: }
2025-09-19T21:08:34:  ⨯ Failed to start server
2025-09-19T21:08:34: Error: listen EADDRINUSE: address already in use :::3000
2025-09-19T21:08:34:     at <unknown> (Error: listen EADDRINUSE: address already in use :::3000)
2025-09-19T21:08:34:     at new Promise (<anonymous>) {
2025-09-19T21:08:34:   code: 'EADDRINUSE',
2025-09-19T21:08:34:   errno: -98,
2025-09-19T21:08:34:   syscall: 'listen',
2025-09-19T21:08:34:   address: '::',
2025-09-19T21:08:34:   port: 3000
2025-09-19T21:08:34: }
2025-09-19T21:08:35:  ⨯ Failed to start server
2025-09-19T21:08:35: Error: listen EADDRINUSE: address already in use :::3000
2025-09-19T21:08:35:     at <unknown> (Error: listen EADDRINUSE: address already in use :::3000)
2025-09-19T21:08:35:     at new Promise (<anonymous>) {
2025-09-19T21:08:35:   code: 'EADDRINUSE',
2025-09-19T21:08:35:   errno: -98,
2025-09-19T21:08:35:   syscall: 'listen',
2025-09-19T21:08:35:   address: '::',
2025-09-19T21:08:35:   port: 3000
2025-09-19T21:08:35: }
2025-09-19T21:08:36:  ⨯ Failed to start server
2025-09-19T21:08:36: Error: listen EADDRINUSE: address already in use :::3000
2025-09-19T21:08:36:     at <unknown> (Error: listen EADDRINUSE: address already in use :::3000)
2025-09-19T21:08:36:     at new Promise (<anonymous>) {
2025-09-19T21:08:36:   code: 'EADDRINUSE',
2025-09-19T21:08:36:   errno: -98,
2025-09-19T21:08:36:   syscall: 'listen',
2025-09-19T21:08:36:   address: '::',
2025-09-19T21:08:36:   port: 3000
2025-09-19T21:08:36: }
2025-09-19T21:10:10:  ⚠ Cross origin request detected from 101.99.76.38 to /_next/* resource. In a future major version of Next.js, you will need to explicitly configure "allowedDevOrigins" in next.config to allow this.
2025-09-19T21:10:10: Read more: https://nextjs.org/docs/app/api-reference/config/next-config-js/allowedDevOrigins
2025-09-19T21:10:10:  ⚠ Cross origin request detected from jliga.live to /_next/* resource. In a future major version of Next.js, you will need to explicitly configure "allowedDevOrigins" in next.config to allow this.
2025-09-19T21:10:10: Read more: https://nextjs.org/docs/app/api-reference/config/next-config-js/allowedDevOrigins
2025-09-19T21:13:16: Error: Route "/api/offers/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-19T21:13:16:     at PATCH (src/app/api/offers/[id]/route.ts:33:27)
2025-09-19T21:13:16:   31 |     // Получаем текущий оффер для аудита
2025-09-19T21:13:16:   32 |     const currentOffer = await prisma.offer.findUnique({
2025-09-19T21:13:16: > 33 |       where: { id: params.id },
2025-09-19T21:13:16:      |                           ^
2025-09-19T21:13:16:   34 |       include: { landings: true }
2025-09-19T21:13:16:   35 |     })
2025-09-19T21:13:16:   36 |     
2025-09-19T21:13:16: Error: Route "/api/offers/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-19T21:13:16:     at PATCH (src/app/api/offers/[id]/route.ts:42:27)
2025-09-19T21:13:16:   40 |     
2025-09-19T21:13:16:   41 |     const updatedOffer = await prisma.offer.update({
2025-09-19T21:13:16: > 42 |       where: { id: params.id },
2025-09-19T21:13:16:      |                           ^
2025-09-19T21:13:16:   43 |       data,
2025-09-19T21:13:16:   44 |       include: { landings: true }
2025-09-19T21:13:16:   45 |     })
2025-09-19T21:13:16: Error: Route "/api/offers/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-19T21:13:16:     at PATCH (src/app/api/offers/[id]/route.ts:52:24)
2025-09-19T21:13:16:   50 |       action: 'update',
2025-09-19T21:13:16:   51 |       entity: 'offer',
2025-09-19T21:13:16: > 52 |       entityId: params.id,
2025-09-19T21:13:16:      |                        ^
2025-09-19T21:13:16:   53 |       before: currentOffer,
2025-09-19T21:13:16:   54 |       after: updatedOffer,
2025-09-19T21:13:16:   55 |     })
2025-09-19T21:13:30: Error: Route "/api/offers/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-19T21:13:30:     at PATCH (src/app/api/offers/[id]/route.ts:33:27)
2025-09-19T21:13:30:   31 |     // Получаем текущий оффер для аудита
2025-09-19T21:13:30:   32 |     const currentOffer = await prisma.offer.findUnique({
2025-09-19T21:13:30: > 33 |       where: { id: params.id },
2025-09-19T21:13:30:      |                           ^
2025-09-19T21:13:30:   34 |       include: { landings: true }
2025-09-19T21:13:30:   35 |     })
2025-09-19T21:13:30:   36 |     
2025-09-19T21:13:30: Error: Route "/api/offers/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-19T21:13:30:     at PATCH (src/app/api/offers/[id]/route.ts:42:27)
2025-09-19T21:13:30:   40 |     
2025-09-19T21:13:30:   41 |     const updatedOffer = await prisma.offer.update({
2025-09-19T21:13:30: > 42 |       where: { id: params.id },
2025-09-19T21:13:30:      |                           ^
2025-09-19T21:13:30:   43 |       data,
2025-09-19T21:13:30:   44 |       include: { landings: true }
2025-09-19T21:13:30:   45 |     })
2025-09-19T21:13:31: Error: Route "/api/offers/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-19T21:13:31:     at PATCH (src/app/api/offers/[id]/route.ts:52:24)
2025-09-19T21:13:31:   50 |       action: 'update',
2025-09-19T21:13:31:   51 |       entity: 'offer',
2025-09-19T21:13:31: > 52 |       entityId: params.id,
2025-09-19T21:13:31:      |                        ^
2025-09-19T21:13:31:   53 |       before: currentOffer,
2025-09-19T21:13:31:   54 |       after: updatedOffer,
2025-09-19T21:13:31:   55 |     })
2025-09-19T21:13:33: Error: Route "/api/offers/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-19T21:13:33:     at PATCH (src/app/api/offers/[id]/route.ts:33:27)
2025-09-19T21:13:33:   31 |     // Получаем текущий оффер для аудита
2025-09-19T21:13:33:   32 |     const currentOffer = await prisma.offer.findUnique({
2025-09-19T21:13:33: > 33 |       where: { id: params.id },
2025-09-19T21:13:33:      |                           ^
2025-09-19T21:13:33:   34 |       include: { landings: true }
2025-09-19T21:13:33:   35 |     })
2025-09-19T21:13:33:   36 |     
2025-09-19T21:13:33: Error: Route "/api/offers/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-19T21:13:33:     at PATCH (src/app/api/offers/[id]/route.ts:42:27)
2025-09-19T21:13:33:   40 |     
2025-09-19T21:13:33:   41 |     const updatedOffer = await prisma.offer.update({
2025-09-19T21:13:33: > 42 |       where: { id: params.id },
2025-09-19T21:13:33:      |                           ^
2025-09-19T21:13:33:   43 |       data,
2025-09-19T21:13:33:   44 |       include: { landings: true }
2025-09-19T21:13:33:   45 |     })
2025-09-19T21:13:33: Error: Route "/api/offers/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-19T21:13:33:     at PATCH (src/app/api/offers/[id]/route.ts:52:24)
2025-09-19T21:13:33:   50 |       action: 'update',
2025-09-19T21:13:33:   51 |       entity: 'offer',
2025-09-19T21:13:33: > 52 |       entityId: params.id,
2025-09-19T21:13:33:      |                        ^
2025-09-19T21:13:33:   53 |       before: currentOffer,
2025-09-19T21:13:33:   54 |       after: updatedOffer,
2025-09-19T21:13:33:   55 |     })
2025-09-19T21:13:35: Error: Route "/api/offers/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-19T21:13:35:     at PATCH (src/app/api/offers/[id]/route.ts:33:27)
2025-09-19T21:13:35:   31 |     // Получаем текущий оффер для аудита
2025-09-19T21:13:35:   32 |     const currentOffer = await prisma.offer.findUnique({
2025-09-19T21:13:35: > 33 |       where: { id: params.id },
2025-09-19T21:13:35:      |                           ^
2025-09-19T21:13:35:   34 |       include: { landings: true }
2025-09-19T21:13:35:   35 |     })
2025-09-19T21:13:35:   36 |     
2025-09-19T21:13:35: Error: Route "/api/offers/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-19T21:13:35:     at PATCH (src/app/api/offers/[id]/route.ts:42:27)
2025-09-19T21:13:35:   40 |     
2025-09-19T21:13:35:   41 |     const updatedOffer = await prisma.offer.update({
2025-09-19T21:13:35: > 42 |       where: { id: params.id },
2025-09-19T21:13:35:      |                           ^
2025-09-19T21:13:35:   43 |       data,
2025-09-19T21:13:35:   44 |       include: { landings: true }
2025-09-19T21:13:35:   45 |     })
2025-09-19T21:13:35: Error: Route "/api/offers/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-19T21:13:35:     at PATCH (src/app/api/offers/[id]/route.ts:52:24)
2025-09-19T21:13:35:   50 |       action: 'update',
2025-09-19T21:13:35:   51 |       entity: 'offer',
2025-09-19T21:13:35: > 52 |       entityId: params.id,
2025-09-19T21:13:35:      |                        ^
2025-09-19T21:13:35:   53 |       before: currentOffer,
2025-09-19T21:13:35:   54 |       after: updatedOffer,
2025-09-19T21:13:35:   55 |     })
2025-09-19T21:14:10: Error: Route "/api/offers/[id]/image" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-19T21:14:10:     at POST (src/app/api/offers/[id]/image/route.ts:30:27)
2025-09-19T21:14:10:   28 |     // Проверяем, что оффер существует
2025-09-19T21:14:10:   29 |     const offer = await prisma.offer.findUnique({
2025-09-19T21:14:10: > 30 |       where: { id: params.id }
2025-09-19T21:14:10:      |                           ^
2025-09-19T21:14:10:   31 |     })
2025-09-19T21:14:10:   32 |     
2025-09-19T21:14:10:   33 |     if (!offer) {
2025-09-19T21:14:11: Error: Route "/api/offers/[id]/image" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-19T21:14:11:     at POST (src/app/api/offers/[id]/image/route.ts:65:32)
2025-09-19T21:14:11:   63 |     // Генерируем уникальное имя файла
2025-09-19T21:14:11:   64 |     const extension = path.extname(file.name)
2025-09-19T21:14:11: > 65 |     const filename = `${params.id}-${Date.now()}${extension}`
2025-09-19T21:14:11:      |                                ^
2025-09-19T21:14:11:   66 |     const filepath = path.join(uploadsDir, filename)
2025-09-19T21:14:11:   67 |
2025-09-19T21:14:11:   68 |     // Сохраняем файл
2025-09-19T21:14:11: Error: Route "/api/offers/[id]/image" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-19T21:14:11:     at POST (src/app/api/offers/[id]/image/route.ts:81:27)
2025-09-19T21:14:11:   79 |     // Обновляем оффер с новым URL изображения
2025-09-19T21:14:11:   80 |     const updatedOffer = await prisma.offer.update({
2025-09-19T21:14:11: > 81 |       where: { id: params.id },
2025-09-19T21:14:11:      |                           ^
2025-09-19T21:14:11:   82 |       data: { imageUrl },
2025-09-19T21:14:11:   83 |       include: { landings: true }
2025-09-19T21:14:11:   84 |     })
2025-09-19T21:14:12: Error: Route "/api/offers/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-19T21:14:12:     at PATCH (src/app/api/offers/[id]/route.ts:33:27)
2025-09-19T21:14:12:   31 |     // Получаем текущий оффер для аудита
2025-09-19T21:14:12:   32 |     const currentOffer = await prisma.offer.findUnique({
2025-09-19T21:14:12: > 33 |       where: { id: params.id },
2025-09-19T21:14:12:      |                           ^
2025-09-19T21:14:12:   34 |       include: { landings: true }
2025-09-19T21:14:12:   35 |     })
2025-09-19T21:14:12:   36 |     
2025-09-19T21:14:12: Error: Route "/api/offers/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-19T21:14:12:     at PATCH (src/app/api/offers/[id]/route.ts:42:27)
2025-09-19T21:14:12:   40 |     
2025-09-19T21:14:12:   41 |     const updatedOffer = await prisma.offer.update({
2025-09-19T21:14:12: > 42 |       where: { id: params.id },
2025-09-19T21:14:12:      |                           ^
2025-09-19T21:14:12:   43 |       data,
2025-09-19T21:14:12:   44 |       include: { landings: true }
2025-09-19T21:14:12:   45 |     })
2025-09-19T21:14:12: Error: Route "/api/offers/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-19T21:14:12:     at PATCH (src/app/api/offers/[id]/route.ts:52:24)
2025-09-19T21:14:12:   50 |       action: 'update',
2025-09-19T21:14:12:   51 |       entity: 'offer',
2025-09-19T21:14:12: > 52 |       entityId: params.id,
2025-09-19T21:14:12:      |                        ^
2025-09-19T21:14:12:   53 |       before: currentOffer,
2025-09-19T21:14:12:   54 |       after: updatedOffer,
2025-09-19T21:14:12:   55 |     })
2025-09-19T21:18:32:  ⚠ Cross origin request detected from 101.99.76.38 to /_next/* resource. In a future major version of Next.js, you will need to explicitly configure "allowedDevOrigins" in next.config to allow this.
2025-09-19T21:18:32: Read more: https://nextjs.org/docs/app/api-reference/config/next-config-js/allowedDevOrigins
2025-09-19T21:21:23:  ⚠ Cross origin request detected from 101.99.76.38 to /_next/* resource. In a future major version of Next.js, you will need to explicitly configure "allowedDevOrigins" in next.config to allow this.
2025-09-19T21:21:23: Read more: https://nextjs.org/docs/app/api-reference/config/next-config-js/allowedDevOrigins
2025-09-19T21:29:30:  ⚠ Cross origin request detected from jliga.live to /_next/* resource. In a future major version of Next.js, you will need to explicitly configure "allowedDevOrigins" in next.config to allow this.
2025-09-19T21:29:30: Read more: https://nextjs.org/docs/app/api-reference/config/next-config-js/allowedDevOrigins
2025-09-19T21:32:55: Error: Route "/api/admin/users/[userId]/edit" used `params.userId`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-19T21:32:55:     at PATCH (src/app/api/admin/users/[userId]/edit/route.ts:43:27)
2025-09-19T21:32:55:   41 |     // Get current user data
2025-09-19T21:32:55:   42 |     const currentUser = await prisma.appUser.findUnique({
2025-09-19T21:32:55: > 43 |       where: { id: params.userId },
2025-09-19T21:32:55:      |                           ^
2025-09-19T21:32:55:   44 |       select: {
2025-09-19T21:32:55:   45 |         id: true,
2025-09-19T21:32:55:   46 |         email: true,
2025-09-19T21:32:55: Error: Route "/api/admin/users/[userId]/edit" used `params.userId`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-19T21:32:55:     at PATCH (src/app/api/admin/users/[userId]/edit/route.ts:87:27)
2025-09-19T21:32:55:   85 |     // Update user
2025-09-19T21:32:55:   86 |     const updatedUser = await prisma.appUser.update({
2025-09-19T21:32:55: > 87 |       where: { id: params.userId },
2025-09-19T21:32:55:      |                           ^
2025-09-19T21:32:55:   88 |       data: updateData,
2025-09-19T21:32:55:   89 |       select: {
2025-09-19T21:32:55:   90 |         id: true,
2025-09-19T21:34:59: Error: Route "/api/admin/users/[userId]/edit" used `params.userId`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-19T21:34:59:     at PATCH (src/app/api/admin/users/[userId]/edit/route.ts:43:27)
2025-09-19T21:34:59:   41 |     // Get current user data
2025-09-19T21:34:59:   42 |     const currentUser = await prisma.appUser.findUnique({
2025-09-19T21:34:59: > 43 |       where: { id: params.userId },
2025-09-19T21:34:59:      |                           ^
2025-09-19T21:34:59:   44 |       select: {
2025-09-19T21:34:59:   45 |         id: true,
2025-09-19T21:34:59:   46 |         email: true,
2025-09-19T21:34:59: Error: Route "/api/admin/users/[userId]/edit" used `params.userId`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-19T21:34:59:     at PATCH (src/app/api/admin/users/[userId]/edit/route.ts:87:27)
2025-09-19T21:34:59:   85 |     // Update user
2025-09-19T21:34:59:   86 |     const updatedUser = await prisma.appUser.update({
2025-09-19T21:34:59: > 87 |       where: { id: params.userId },
2025-09-19T21:34:59:      |                           ^
2025-09-19T21:34:59:   88 |       data: updateData,
2025-09-19T21:34:59:   89 |       select: {
2025-09-19T21:34:59:   90 |         id: true,
2025-09-19T21:36:45: Error: Route "/api/admin/users/[userId]/edit" used `params.userId`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-19T21:36:45:     at PATCH (src/app/api/admin/users/[userId]/edit/route.ts:43:27)
2025-09-19T21:36:45:   41 |     // Get current user data
2025-09-19T21:36:45:   42 |     const currentUser = await prisma.appUser.findUnique({
2025-09-19T21:36:45: > 43 |       where: { id: params.userId },
2025-09-19T21:36:45:      |                           ^
2025-09-19T21:36:45:   44 |       select: {
2025-09-19T21:36:45:   45 |         id: true,
2025-09-19T21:36:45:   46 |         email: true,
2025-09-19T21:36:45: Error: Route "/api/admin/users/[userId]/edit" used `params.userId`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-19T21:36:45:     at PATCH (src/app/api/admin/users/[userId]/edit/route.ts:87:27)
2025-09-19T21:36:45:   85 |     // Update user
2025-09-19T21:36:45:   86 |     const updatedUser = await prisma.appUser.update({
2025-09-19T21:36:45: > 87 |       where: { id: params.userId },
2025-09-19T21:36:45:      |                           ^
2025-09-19T21:36:45:   88 |       data: updateData,
2025-09-19T21:36:45:   89 |       select: {
2025-09-19T21:36:45:   90 |         id: true,
2025-09-21T06:15:19:  ⚠ Cross origin request detected from jliga.live to /_next/* resource. In a future major version of Next.js, you will need to explicitly configure "allowedDevOrigins" in next.config to allow this.
2025-09-21T06:15:19: Read more: https://nextjs.org/docs/app/api-reference/config/next-config-js/allowedDevOrigins
2025-09-22T18:25:02: Error: Route "/api/offers/[id]/landings" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:25:02:     at POST (src/app/api/offers/[id]/landings/route.ts:33:27)
2025-09-22T18:25:02:   31 |     // Проверяем, что оффер существует
2025-09-22T18:25:02:   32 |     const offer = await prisma.offer.findUnique({
2025-09-22T18:25:02: > 33 |       where: { id: params.id }
2025-09-22T18:25:02:      |                           ^
2025-09-22T18:25:02:   34 |     })
2025-09-22T18:25:02:   35 |     
2025-09-22T18:25:02:   36 |     if (!offer) {
2025-09-22T18:25:03: Error: Route "/api/offers/[id]/landings" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:25:03:     at POST (src/app/api/offers/[id]/landings/route.ts:44:27)
2025-09-22T18:25:03:   42 |       const existingLanding = await prisma.landing.findFirst({
2025-09-22T18:25:03:   43 |         where: {
2025-09-22T18:25:03: > 44 |           offerId: params.id,
2025-09-22T18:25:03:      |                           ^
2025-09-22T18:25:03:   45 |           type: data.type,
2025-09-22T18:25:03:   46 |           extId: data.extId,
2025-09-22T18:25:03:   47 |         }
2025-09-22T18:25:03: Error: Route "/api/offers/[id]/landings" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:25:03:     at POST (src/app/api/offers/[id]/landings/route.ts:61:25)
2025-09-22T18:25:03:   59 |     const maxOrder = await prisma.landing.findFirst({
2025-09-22T18:25:03:   60 |       where: {
2025-09-22T18:25:03: > 61 |         offerId: params.id,
2025-09-22T18:25:03:      |                         ^
2025-09-22T18:25:03:   62 |         type: data.type,
2025-09-22T18:25:03:   63 |       },
2025-09-22T18:25:03:   64 |       select: { order: true },
2025-09-22T18:25:03: Error: Route "/api/offers/[id]/landings" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:25:03:     at POST (src/app/api/offers/[id]/landings/route.ts:71:25)
2025-09-22T18:25:03:   69 |       data: {
2025-09-22T18:25:03:   70 |         ...data,
2025-09-22T18:25:03: > 71 |         offerId: params.id,
2025-09-22T18:25:03:      |                         ^
2025-09-22T18:25:03:   72 |         order: (maxOrder?.order || 0) + 10,
2025-09-22T18:25:03:   73 |       },
2025-09-22T18:25:03:   74 |       include: {
2025-09-22T18:25:04: Error: Route "/api/offers/[id]/landings" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:25:04:     at POST (src/app/api/offers/[id]/landings/route.ts:33:27)
2025-09-22T18:25:04:   31 |     // Проверяем, что оффер существует
2025-09-22T18:25:04:   32 |     const offer = await prisma.offer.findUnique({
2025-09-22T18:25:04: > 33 |       where: { id: params.id }
2025-09-22T18:25:04:      |                           ^
2025-09-22T18:25:04:   34 |     })
2025-09-22T18:25:04:   35 |     
2025-09-22T18:25:04:   36 |     if (!offer) {
2025-09-22T18:25:04: Error: Route "/api/offers/[id]/landings" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:25:04:     at POST (src/app/api/offers/[id]/landings/route.ts:44:27)
2025-09-22T18:25:04:   42 |       const existingLanding = await prisma.landing.findFirst({
2025-09-22T18:25:04:   43 |         where: {
2025-09-22T18:25:04: > 44 |           offerId: params.id,
2025-09-22T18:25:04:      |                           ^
2025-09-22T18:25:04:   45 |           type: data.type,
2025-09-22T18:25:04:   46 |           extId: data.extId,
2025-09-22T18:25:04:   47 |         }
2025-09-22T18:25:04: Error: Route "/api/offers/[id]/landings" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:25:04:     at POST (src/app/api/offers/[id]/landings/route.ts:61:25)
2025-09-22T18:25:04:   59 |     const maxOrder = await prisma.landing.findFirst({
2025-09-22T18:25:04:   60 |       where: {
2025-09-22T18:25:04: > 61 |         offerId: params.id,
2025-09-22T18:25:04:      |                         ^
2025-09-22T18:25:04:   62 |         type: data.type,
2025-09-22T18:25:04:   63 |       },
2025-09-22T18:25:04:   64 |       select: { order: true },
2025-09-22T18:25:04: Error: Route "/api/offers/[id]/landings" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:25:04:     at POST (src/app/api/offers/[id]/landings/route.ts:71:25)
2025-09-22T18:25:04:   69 |       data: {
2025-09-22T18:25:04:   70 |         ...data,
2025-09-22T18:25:04: > 71 |         offerId: params.id,
2025-09-22T18:25:04:      |                         ^
2025-09-22T18:25:04:   72 |         order: (maxOrder?.order || 0) + 10,
2025-09-22T18:25:04:   73 |       },
2025-09-22T18:25:04:   74 |       include: {
2025-09-22T18:25:04: Error: Route "/api/offers/[id]/landings" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:25:04:     at POST (src/app/api/offers/[id]/landings/route.ts:33:27)
2025-09-22T18:25:04:   31 |     // Проверяем, что оффер существует
2025-09-22T18:25:04:   32 |     const offer = await prisma.offer.findUnique({
2025-09-22T18:25:04: > 33 |       where: { id: params.id }
2025-09-22T18:25:04:      |                           ^
2025-09-22T18:25:04:   34 |     })
2025-09-22T18:25:04:   35 |     
2025-09-22T18:25:04:   36 |     if (!offer) {
2025-09-22T18:25:05: Error: Route "/api/offers/[id]/landings" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:25:05:     at POST (src/app/api/offers/[id]/landings/route.ts:44:27)
2025-09-22T18:25:05:   42 |       const existingLanding = await prisma.landing.findFirst({
2025-09-22T18:25:05:   43 |         where: {
2025-09-22T18:25:05: > 44 |           offerId: params.id,
2025-09-22T18:25:05:      |                           ^
2025-09-22T18:25:05:   45 |           type: data.type,
2025-09-22T18:25:05:   46 |           extId: data.extId,
2025-09-22T18:25:05:   47 |         }
2025-09-22T18:25:05: Error: Route "/api/offers/[id]/landings" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:25:05:     at POST (src/app/api/offers/[id]/landings/route.ts:61:25)
2025-09-22T18:25:05:   59 |     const maxOrder = await prisma.landing.findFirst({
2025-09-22T18:25:05:   60 |       where: {
2025-09-22T18:25:05: > 61 |         offerId: params.id,
2025-09-22T18:25:05:      |                         ^
2025-09-22T18:25:05:   62 |         type: data.type,
2025-09-22T18:25:05:   63 |       },
2025-09-22T18:25:05:   64 |       select: { order: true },
2025-09-22T18:25:05: Error: Route "/api/offers/[id]/landings" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:25:05:     at POST (src/app/api/offers/[id]/landings/route.ts:71:25)
2025-09-22T18:25:05:   69 |       data: {
2025-09-22T18:25:05:   70 |         ...data,
2025-09-22T18:25:05: > 71 |         offerId: params.id,
2025-09-22T18:25:05:      |                         ^
2025-09-22T18:25:05:   72 |         order: (maxOrder?.order || 0) + 10,
2025-09-22T18:25:05:   73 |       },
2025-09-22T18:25:05:   74 |       include: {
2025-09-22T18:29:26: Error: Route "/api/offers/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:29:26:     at PATCH (src/app/api/offers/[id]/route.ts:33:27)
2025-09-22T18:29:26:   31 |     // Получаем текущий оффер для аудита
2025-09-22T18:29:26:   32 |     const currentOffer = await prisma.offer.findUnique({
2025-09-22T18:29:26: > 33 |       where: { id: params.id },
2025-09-22T18:29:26:      |                           ^
2025-09-22T18:29:26:   34 |       include: { landings: true }
2025-09-22T18:29:26:   35 |     })
2025-09-22T18:29:26:   36 |     
2025-09-22T18:29:26: Error: Route "/api/offers/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:29:26:     at PATCH (src/app/api/offers/[id]/route.ts:42:27)
2025-09-22T18:29:26:   40 |     
2025-09-22T18:29:26:   41 |     const updatedOffer = await prisma.offer.update({
2025-09-22T18:29:26: > 42 |       where: { id: params.id },
2025-09-22T18:29:26:      |                           ^
2025-09-22T18:29:26:   43 |       data,
2025-09-22T18:29:26:   44 |       include: { landings: true }
2025-09-22T18:29:26:   45 |     })
2025-09-22T18:29:27: Error: Route "/api/offers/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:29:27:     at PATCH (src/app/api/offers/[id]/route.ts:52:24)
2025-09-22T18:29:27:   50 |       action: 'update',
2025-09-22T18:29:27:   51 |       entity: 'offer',
2025-09-22T18:29:27: > 52 |       entityId: params.id,
2025-09-22T18:29:27:      |                        ^
2025-09-22T18:29:27:   53 |       before: currentOffer,
2025-09-22T18:29:27:   54 |       after: updatedOffer,
2025-09-22T18:29:27:   55 |     })
2025-09-22T18:30:29: Error: Route "/api/offers/[id]/image" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:30:29:     at POST (src/app/api/offers/[id]/image/route.ts:30:27)
2025-09-22T18:30:29:   28 |     // Проверяем, что оффер существует
2025-09-22T18:30:29:   29 |     const offer = await prisma.offer.findUnique({
2025-09-22T18:30:29: > 30 |       where: { id: params.id }
2025-09-22T18:30:29:      |                           ^
2025-09-22T18:30:29:   31 |     })
2025-09-22T18:30:29:   32 |     
2025-09-22T18:30:29:   33 |     if (!offer) {
2025-09-22T18:30:29: Error: Route "/api/offers/[id]/image" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:30:29:     at POST (src/app/api/offers/[id]/image/route.ts:65:32)
2025-09-22T18:30:29:   63 |     // Генерируем уникальное имя файла
2025-09-22T18:30:29:   64 |     const extension = path.extname(file.name)
2025-09-22T18:30:29: > 65 |     const filename = `${params.id}-${Date.now()}${extension}`
2025-09-22T18:30:29:      |                                ^
2025-09-22T18:30:29:   66 |     const filepath = path.join(uploadsDir, filename)
2025-09-22T18:30:29:   67 |
2025-09-22T18:30:29:   68 |     // Сохраняем файл
2025-09-22T18:30:30: Error: Route "/api/offers/[id]/image" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:30:30:     at POST (src/app/api/offers/[id]/image/route.ts:81:27)
2025-09-22T18:30:30:   79 |     // Обновляем оффер с новым URL изображения
2025-09-22T18:30:30:   80 |     const updatedOffer = await prisma.offer.update({
2025-09-22T18:30:30: > 81 |       where: { id: params.id },
2025-09-22T18:30:30:      |                           ^
2025-09-22T18:30:30:   82 |       data: { imageUrl },
2025-09-22T18:30:30:   83 |       include: { landings: true }
2025-09-22T18:30:30:   84 |     })
2025-09-22T18:30:30: Error: Route "/api/offers/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:30:30:     at PATCH (src/app/api/offers/[id]/route.ts:33:27)
2025-09-22T18:30:30:   31 |     // Получаем текущий оффер для аудита
2025-09-22T18:30:30:   32 |     const currentOffer = await prisma.offer.findUnique({
2025-09-22T18:30:30: > 33 |       where: { id: params.id },
2025-09-22T18:30:30:      |                           ^
2025-09-22T18:30:30:   34 |       include: { landings: true }
2025-09-22T18:30:30:   35 |     })
2025-09-22T18:30:30:   36 |     
2025-09-22T18:30:31: Error: Route "/api/offers/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:30:31:     at PATCH (src/app/api/offers/[id]/route.ts:42:27)
2025-09-22T18:30:31:   40 |     
2025-09-22T18:30:31:   41 |     const updatedOffer = await prisma.offer.update({
2025-09-22T18:30:31: > 42 |       where: { id: params.id },
2025-09-22T18:30:31:      |                           ^
2025-09-22T18:30:31:   43 |       data,
2025-09-22T18:30:31:   44 |       include: { landings: true }
2025-09-22T18:30:31:   45 |     })
2025-09-22T18:30:31: Error: Route "/api/offers/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:30:31:     at PATCH (src/app/api/offers/[id]/route.ts:52:24)
2025-09-22T18:30:31:   50 |       action: 'update',
2025-09-22T18:30:31:   51 |       entity: 'offer',
2025-09-22T18:30:31: > 52 |       entityId: params.id,
2025-09-22T18:30:31:      |                        ^
2025-09-22T18:30:31:   53 |       before: currentOffer,
2025-09-22T18:30:31:   54 |       after: updatedOffer,
2025-09-22T18:30:31:   55 |     })
2025-09-22T18:30:31: Error: Route "/api/offers/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:30:31:     at PATCH (src/app/api/offers/[id]/route.ts:33:27)
2025-09-22T18:30:31:   31 |     // Получаем текущий оффер для аудита
2025-09-22T18:30:31:   32 |     const currentOffer = await prisma.offer.findUnique({
2025-09-22T18:30:31: > 33 |       where: { id: params.id },
2025-09-22T18:30:31:      |                           ^
2025-09-22T18:30:31:   34 |       include: { landings: true }
2025-09-22T18:30:31:   35 |     })
2025-09-22T18:30:31:   36 |     
2025-09-22T18:30:31: Error: Route "/api/offers/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:30:31:     at PATCH (src/app/api/offers/[id]/route.ts:42:27)
2025-09-22T18:30:31:   40 |     
2025-09-22T18:30:31:   41 |     const updatedOffer = await prisma.offer.update({
2025-09-22T18:30:31: > 42 |       where: { id: params.id },
2025-09-22T18:30:31:      |                           ^
2025-09-22T18:30:31:   43 |       data,
2025-09-22T18:30:31:   44 |       include: { landings: true }
2025-09-22T18:30:31:   45 |     })
2025-09-22T18:30:31: Error: Route "/api/offers/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:30:31:     at PATCH (src/app/api/offers/[id]/route.ts:52:24)
2025-09-22T18:30:31:   50 |       action: 'update',
2025-09-22T18:30:31:   51 |       entity: 'offer',
2025-09-22T18:30:31: > 52 |       entityId: params.id,
2025-09-22T18:30:31:      |                        ^
2025-09-22T18:30:31:   53 |       before: currentOffer,
2025-09-22T18:30:31:   54 |       after: updatedOffer,
2025-09-22T18:30:31:   55 |     })
2025-09-22T18:30:35: Error: Route "/api/offers/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:30:35:     at PATCH (src/app/api/offers/[id]/route.ts:33:27)
2025-09-22T18:30:35:   31 |     // Получаем текущий оффер для аудита
2025-09-22T18:30:35:   32 |     const currentOffer = await prisma.offer.findUnique({
2025-09-22T18:30:35: > 33 |       where: { id: params.id },
2025-09-22T18:30:35:      |                           ^
2025-09-22T18:30:35:   34 |       include: { landings: true }
2025-09-22T18:30:35:   35 |     })
2025-09-22T18:30:35:   36 |     
2025-09-22T18:30:35: Error: Route "/api/offers/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:30:35:     at PATCH (src/app/api/offers/[id]/route.ts:42:27)
2025-09-22T18:30:35:   40 |     
2025-09-22T18:30:35:   41 |     const updatedOffer = await prisma.offer.update({
2025-09-22T18:30:35: > 42 |       where: { id: params.id },
2025-09-22T18:30:35:      |                           ^
2025-09-22T18:30:35:   43 |       data,
2025-09-22T18:30:35:   44 |       include: { landings: true }
2025-09-22T18:30:35:   45 |     })
2025-09-22T18:30:36: Error: Route "/api/offers/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:30:36:     at PATCH (src/app/api/offers/[id]/route.ts:52:24)
2025-09-22T18:30:36:   50 |       action: 'update',
2025-09-22T18:30:36:   51 |       entity: 'offer',
2025-09-22T18:30:36: > 52 |       entityId: params.id,
2025-09-22T18:30:36:      |                        ^
2025-09-22T18:30:36:   53 |       before: currentOffer,
2025-09-22T18:30:36:   54 |       after: updatedOffer,
2025-09-22T18:30:36:   55 |     })
2025-09-22T18:32:26: Error: Route "/api/offers/[id]/landings" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:32:26:     at POST (src/app/api/offers/[id]/landings/route.ts:33:27)
2025-09-22T18:32:26:   31 |     // Проверяем, что оффер существует
2025-09-22T18:32:26:   32 |     const offer = await prisma.offer.findUnique({
2025-09-22T18:32:26: > 33 |       where: { id: params.id }
2025-09-22T18:32:26:      |                           ^
2025-09-22T18:32:26:   34 |     })
2025-09-22T18:32:26:   35 |     
2025-09-22T18:32:26:   36 |     if (!offer) {
2025-09-22T18:32:26: Error: Route "/api/offers/[id]/landings" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:32:26:     at POST (src/app/api/offers/[id]/landings/route.ts:44:27)
2025-09-22T18:32:26:   42 |       const existingLanding = await prisma.landing.findFirst({
2025-09-22T18:32:26:   43 |         where: {
2025-09-22T18:32:26: > 44 |           offerId: params.id,
2025-09-22T18:32:26:      |                           ^
2025-09-22T18:32:26:   45 |           type: data.type,
2025-09-22T18:32:26:   46 |           extId: data.extId,
2025-09-22T18:32:26:   47 |         }
2025-09-22T18:32:27: Error: Route "/api/offers/[id]/landings" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:32:27:     at POST (src/app/api/offers/[id]/landings/route.ts:61:25)
2025-09-22T18:32:27:   59 |     const maxOrder = await prisma.landing.findFirst({
2025-09-22T18:32:27:   60 |       where: {
2025-09-22T18:32:27: > 61 |         offerId: params.id,
2025-09-22T18:32:27:      |                         ^
2025-09-22T18:32:27:   62 |         type: data.type,
2025-09-22T18:32:27:   63 |       },
2025-09-22T18:32:27:   64 |       select: { order: true },
2025-09-22T18:32:27: Error: Route "/api/offers/[id]/landings" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:32:27:     at POST (src/app/api/offers/[id]/landings/route.ts:71:25)
2025-09-22T18:32:27:   69 |       data: {
2025-09-22T18:32:27:   70 |         ...data,
2025-09-22T18:32:27: > 71 |         offerId: params.id,
2025-09-22T18:32:27:      |                         ^
2025-09-22T18:32:27:   72 |         order: (maxOrder?.order || 0) + 10,
2025-09-22T18:32:27:   73 |       },
2025-09-22T18:32:27:   74 |       include: {
2025-09-22T18:32:27: Error: Route "/api/offers/[id]/landings" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:32:27:     at POST (src/app/api/offers/[id]/landings/route.ts:33:27)
2025-09-22T18:32:27:   31 |     // Проверяем, что оффер существует
2025-09-22T18:32:27:   32 |     const offer = await prisma.offer.findUnique({
2025-09-22T18:32:27: > 33 |       where: { id: params.id }
2025-09-22T18:32:27:      |                           ^
2025-09-22T18:32:27:   34 |     })
2025-09-22T18:32:27:   35 |     
2025-09-22T18:32:27:   36 |     if (!offer) {
2025-09-22T18:32:27: Error: Route "/api/offers/[id]/landings" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:32:27:     at POST (src/app/api/offers/[id]/landings/route.ts:44:27)
2025-09-22T18:32:27:   42 |       const existingLanding = await prisma.landing.findFirst({
2025-09-22T18:32:27:   43 |         where: {
2025-09-22T18:32:27: > 44 |           offerId: params.id,
2025-09-22T18:32:27:      |                           ^
2025-09-22T18:32:27:   45 |           type: data.type,
2025-09-22T18:32:27:   46 |           extId: data.extId,
2025-09-22T18:32:27:   47 |         }
2025-09-22T18:32:28: Error: Route "/api/offers/[id]/landings" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:32:28:     at POST (src/app/api/offers/[id]/landings/route.ts:61:25)
2025-09-22T18:32:28:   59 |     const maxOrder = await prisma.landing.findFirst({
2025-09-22T18:32:28:   60 |       where: {
2025-09-22T18:32:28: > 61 |         offerId: params.id,
2025-09-22T18:32:28:      |                         ^
2025-09-22T18:32:28:   62 |         type: data.type,
2025-09-22T18:32:28:   63 |       },
2025-09-22T18:32:28:   64 |       select: { order: true },
2025-09-22T18:32:28: Error: Route "/api/offers/[id]/landings" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:32:28:     at POST (src/app/api/offers/[id]/landings/route.ts:71:25)
2025-09-22T18:32:28:   69 |       data: {
2025-09-22T18:32:28:   70 |         ...data,
2025-09-22T18:32:28: > 71 |         offerId: params.id,
2025-09-22T18:32:28:      |                         ^
2025-09-22T18:32:28:   72 |         order: (maxOrder?.order || 0) + 10,
2025-09-22T18:32:28:   73 |       },
2025-09-22T18:32:28:   74 |       include: {
2025-09-22T18:32:28: Error: Route "/api/offers/[id]/landings" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:32:28:     at POST (src/app/api/offers/[id]/landings/route.ts:33:27)
2025-09-22T18:32:28:   31 |     // Проверяем, что оффер существует
2025-09-22T18:32:28:   32 |     const offer = await prisma.offer.findUnique({
2025-09-22T18:32:28: > 33 |       where: { id: params.id }
2025-09-22T18:32:28:      |                           ^
2025-09-22T18:32:28:   34 |     })
2025-09-22T18:32:28:   35 |     
2025-09-22T18:32:28:   36 |     if (!offer) {
2025-09-22T18:32:29: Error: Route "/api/offers/[id]/landings" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:32:29:     at POST (src/app/api/offers/[id]/landings/route.ts:44:27)
2025-09-22T18:32:29:   42 |       const existingLanding = await prisma.landing.findFirst({
2025-09-22T18:32:29:   43 |         where: {
2025-09-22T18:32:29: > 44 |           offerId: params.id,
2025-09-22T18:32:29:      |                           ^
2025-09-22T18:32:29:   45 |           type: data.type,
2025-09-22T18:32:29:   46 |           extId: data.extId,
2025-09-22T18:32:29:   47 |         }
2025-09-22T18:32:29: Error: Route "/api/offers/[id]/landings" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:32:29:     at POST (src/app/api/offers/[id]/landings/route.ts:61:25)
2025-09-22T18:32:29:   59 |     const maxOrder = await prisma.landing.findFirst({
2025-09-22T18:32:29:   60 |       where: {
2025-09-22T18:32:29: > 61 |         offerId: params.id,
2025-09-22T18:32:29:      |                         ^
2025-09-22T18:32:29:   62 |         type: data.type,
2025-09-22T18:32:29:   63 |       },
2025-09-22T18:32:29:   64 |       select: { order: true },
2025-09-22T18:32:29: Error: Route "/api/offers/[id]/landings" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:32:29:     at POST (src/app/api/offers/[id]/landings/route.ts:71:25)
2025-09-22T18:32:29:   69 |       data: {
2025-09-22T18:32:29:   70 |         ...data,
2025-09-22T18:32:29: > 71 |         offerId: params.id,
2025-09-22T18:32:29:      |                         ^
2025-09-22T18:32:29:   72 |         order: (maxOrder?.order || 0) + 10,
2025-09-22T18:32:29:   73 |       },
2025-09-22T18:32:29:   74 |       include: {
2025-09-22T18:32:30: Error: Route "/api/offers/[id]/landings" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:32:30:     at POST (src/app/api/offers/[id]/landings/route.ts:33:27)
2025-09-22T18:32:30:   31 |     // Проверяем, что оффер существует
2025-09-22T18:32:30:   32 |     const offer = await prisma.offer.findUnique({
2025-09-22T18:32:30: > 33 |       where: { id: params.id }
2025-09-22T18:32:30:      |                           ^
2025-09-22T18:32:30:   34 |     })
2025-09-22T18:32:30:   35 |     
2025-09-22T18:32:30:   36 |     if (!offer) {
2025-09-22T18:32:30: Error: Route "/api/offers/[id]/landings" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:32:30:     at POST (src/app/api/offers/[id]/landings/route.ts:44:27)
2025-09-22T18:32:30:   42 |       const existingLanding = await prisma.landing.findFirst({
2025-09-22T18:32:30:   43 |         where: {
2025-09-22T18:32:30: > 44 |           offerId: params.id,
2025-09-22T18:32:30:      |                           ^
2025-09-22T18:32:30:   45 |           type: data.type,
2025-09-22T18:32:30:   46 |           extId: data.extId,
2025-09-22T18:32:30:   47 |         }
2025-09-22T18:32:30: Error: Route "/api/offers/[id]/landings" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:32:30:     at POST (src/app/api/offers/[id]/landings/route.ts:61:25)
2025-09-22T18:32:30:   59 |     const maxOrder = await prisma.landing.findFirst({
2025-09-22T18:32:30:   60 |       where: {
2025-09-22T18:32:30: > 61 |         offerId: params.id,
2025-09-22T18:32:30:      |                         ^
2025-09-22T18:32:30:   62 |         type: data.type,
2025-09-22T18:32:30:   63 |       },
2025-09-22T18:32:30:   64 |       select: { order: true },
2025-09-22T18:32:30: Error: Route "/api/offers/[id]/landings" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:32:30:     at POST (src/app/api/offers/[id]/landings/route.ts:71:25)
2025-09-22T18:32:30:   69 |       data: {
2025-09-22T18:32:30:   70 |         ...data,
2025-09-22T18:32:30: > 71 |         offerId: params.id,
2025-09-22T18:32:30:      |                         ^
2025-09-22T18:32:30:   72 |         order: (maxOrder?.order || 0) + 10,
2025-09-22T18:32:30:   73 |       },
2025-09-22T18:32:30:   74 |       include: {
2025-09-22T18:33:49: Error: Route "/api/offers/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:33:49:     at PATCH (src/app/api/offers/[id]/route.ts:33:27)
2025-09-22T18:33:49:   31 |     // Получаем текущий оффер для аудита
2025-09-22T18:33:49:   32 |     const currentOffer = await prisma.offer.findUnique({
2025-09-22T18:33:49: > 33 |       where: { id: params.id },
2025-09-22T18:33:49:      |                           ^
2025-09-22T18:33:49:   34 |       include: { landings: true }
2025-09-22T18:33:49:   35 |     })
2025-09-22T18:33:49:   36 |     
2025-09-22T18:33:50: Error: Route "/api/offers/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:33:50:     at PATCH (src/app/api/offers/[id]/route.ts:42:27)
2025-09-22T18:33:50:   40 |     
2025-09-22T18:33:50:   41 |     const updatedOffer = await prisma.offer.update({
2025-09-22T18:33:50: > 42 |       where: { id: params.id },
2025-09-22T18:33:50:      |                           ^
2025-09-22T18:33:50:   43 |       data,
2025-09-22T18:33:50:   44 |       include: { landings: true }
2025-09-22T18:33:50:   45 |     })
2025-09-22T18:33:50: Error: Route "/api/offers/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:33:50:     at PATCH (src/app/api/offers/[id]/route.ts:52:24)
2025-09-22T18:33:50:   50 |       action: 'update',
2025-09-22T18:33:50:   51 |       entity: 'offer',
2025-09-22T18:33:50: > 52 |       entityId: params.id,
2025-09-22T18:33:50:      |                        ^
2025-09-22T18:33:50:   53 |       before: currentOffer,
2025-09-22T18:33:50:   54 |       after: updatedOffer,
2025-09-22T18:33:50:   55 |     })
2025-09-22T18:35:08: Error: Route "/api/landings/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:35:08:     at PATCH (src/app/api/landings/[id]/route.ts:33:27)
2025-09-22T18:35:08:   31 |     // Получаем текущий лендинг для аудита
2025-09-22T18:35:08:   32 |     const currentLanding = await prisma.landing.findUnique({
2025-09-22T18:35:08: > 33 |       where: { id: params.id },
2025-09-22T18:35:08:      |                           ^
2025-09-22T18:35:08:   34 |       include: { offer: true }
2025-09-22T18:35:08:   35 |     })
2025-09-22T18:35:08:   36 |     
2025-09-22T18:35:09: Error: Route "/api/landings/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:35:09:     at PATCH (src/app/api/landings/[id]/route.ts:61:27)
2025-09-22T18:35:09:   59 |     
2025-09-22T18:35:09:   60 |     const updatedLanding = await prisma.landing.update({
2025-09-22T18:35:09: > 61 |       where: { id: params.id },
2025-09-22T18:35:09:      |                           ^
2025-09-22T18:35:09:   62 |       data,
2025-09-22T18:35:09:   63 |       include: { offer: true }
2025-09-22T18:35:09:   64 |     })
2025-09-22T18:35:09: Error: Route "/api/landings/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:35:09:     at PATCH (src/app/api/landings/[id]/route.ts:71:24)
2025-09-22T18:35:09:   69 |       action: 'update',
2025-09-22T18:35:09:   70 |       entity: 'landing',
2025-09-22T18:35:09: > 71 |       entityId: params.id,
2025-09-22T18:35:09:      |                        ^
2025-09-22T18:35:09:   72 |       before: currentLanding,
2025-09-22T18:35:09:   73 |       after: updatedLanding,
2025-09-22T18:35:09:   74 |     })
2025-09-22T18:35:09: Error: Route "/api/offers/[id]/landings" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:35:09:     at POST (src/app/api/offers/[id]/landings/route.ts:33:27)
2025-09-22T18:35:09:   31 |     // Проверяем, что оффер существует
2025-09-22T18:35:09:   32 |     const offer = await prisma.offer.findUnique({
2025-09-22T18:35:09: > 33 |       where: { id: params.id }
2025-09-22T18:35:09:      |                           ^
2025-09-22T18:35:09:   34 |     })
2025-09-22T18:35:09:   35 |     
2025-09-22T18:35:09:   36 |     if (!offer) {
2025-09-22T18:35:10: Error: Route "/api/offers/[id]/landings" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:35:10:     at POST (src/app/api/offers/[id]/landings/route.ts:44:27)
2025-09-22T18:35:10:   42 |       const existingLanding = await prisma.landing.findFirst({
2025-09-22T18:35:10:   43 |         where: {
2025-09-22T18:35:10: > 44 |           offerId: params.id,
2025-09-22T18:35:10:      |                           ^
2025-09-22T18:35:10:   45 |           type: data.type,
2025-09-22T18:35:10:   46 |           extId: data.extId,
2025-09-22T18:35:10:   47 |         }
2025-09-22T18:35:10: Error: Route "/api/offers/[id]/landings" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:35:10:     at POST (src/app/api/offers/[id]/landings/route.ts:61:25)
2025-09-22T18:35:10:   59 |     const maxOrder = await prisma.landing.findFirst({
2025-09-22T18:35:10:   60 |       where: {
2025-09-22T18:35:10: > 61 |         offerId: params.id,
2025-09-22T18:35:10:      |                         ^
2025-09-22T18:35:10:   62 |         type: data.type,
2025-09-22T18:35:10:   63 |       },
2025-09-22T18:35:10:   64 |       select: { order: true },
2025-09-22T18:35:10: Error: Route "/api/offers/[id]/landings" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:35:10:     at POST (src/app/api/offers/[id]/landings/route.ts:71:25)
2025-09-22T18:35:10:   69 |       data: {
2025-09-22T18:35:10:   70 |         ...data,
2025-09-22T18:35:10: > 71 |         offerId: params.id,
2025-09-22T18:35:10:      |                         ^
2025-09-22T18:35:10:   72 |         order: (maxOrder?.order || 0) + 10,
2025-09-22T18:35:10:   73 |       },
2025-09-22T18:35:10:   74 |       include: {
2025-09-22T18:35:10: Error: Route "/api/landings/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:35:10:     at PATCH (src/app/api/landings/[id]/route.ts:33:27)
2025-09-22T18:35:10:   31 |     // Получаем текущий лендинг для аудита
2025-09-22T18:35:10:   32 |     const currentLanding = await prisma.landing.findUnique({
2025-09-22T18:35:10: > 33 |       where: { id: params.id },
2025-09-22T18:35:10:      |                           ^
2025-09-22T18:35:10:   34 |       include: { offer: true }
2025-09-22T18:35:10:   35 |     })
2025-09-22T18:35:10:   36 |     
2025-09-22T18:35:11: Error: Route "/api/landings/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:35:11:     at PATCH (src/app/api/landings/[id]/route.ts:61:27)
2025-09-22T18:35:11:   59 |     
2025-09-22T18:35:11:   60 |     const updatedLanding = await prisma.landing.update({
2025-09-22T18:35:11: > 61 |       where: { id: params.id },
2025-09-22T18:35:11:      |                           ^
2025-09-22T18:35:11:   62 |       data,
2025-09-22T18:35:11:   63 |       include: { offer: true }
2025-09-22T18:35:11:   64 |     })
2025-09-22T18:35:11: Error: Route "/api/landings/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:35:11:     at PATCH (src/app/api/landings/[id]/route.ts:71:24)
2025-09-22T18:35:11:   69 |       action: 'update',
2025-09-22T18:35:11:   70 |       entity: 'landing',
2025-09-22T18:35:11: > 71 |       entityId: params.id,
2025-09-22T18:35:11:      |                        ^
2025-09-22T18:35:11:   72 |       before: currentLanding,
2025-09-22T18:35:11:   73 |       after: updatedLanding,
2025-09-22T18:35:11:   74 |     })
2025-09-22T18:35:11: Error: Route "/api/landings/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:35:11:     at PATCH (src/app/api/landings/[id]/route.ts:33:27)
2025-09-22T18:35:11:   31 |     // Получаем текущий лендинг для аудита
2025-09-22T18:35:11:   32 |     const currentLanding = await prisma.landing.findUnique({
2025-09-22T18:35:11: > 33 |       where: { id: params.id },
2025-09-22T18:35:11:      |                           ^
2025-09-22T18:35:11:   34 |       include: { offer: true }
2025-09-22T18:35:11:   35 |     })
2025-09-22T18:35:11:   36 |     
2025-09-22T18:35:11: Error: Route "/api/landings/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:35:11:     at PATCH (src/app/api/landings/[id]/route.ts:61:27)
2025-09-22T18:35:11:   59 |     
2025-09-22T18:35:11:   60 |     const updatedLanding = await prisma.landing.update({
2025-09-22T18:35:11: > 61 |       where: { id: params.id },
2025-09-22T18:35:11:      |                           ^
2025-09-22T18:35:11:   62 |       data,
2025-09-22T18:35:11:   63 |       include: { offer: true }
2025-09-22T18:35:11:   64 |     })
2025-09-22T18:35:12: Error: Route "/api/landings/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:35:12:     at PATCH (src/app/api/landings/[id]/route.ts:71:24)
2025-09-22T18:35:12:   69 |       action: 'update',
2025-09-22T18:35:12:   70 |       entity: 'landing',
2025-09-22T18:35:12: > 71 |       entityId: params.id,
2025-09-22T18:35:12:      |                        ^
2025-09-22T18:35:12:   72 |       before: currentLanding,
2025-09-22T18:35:12:   73 |       after: updatedLanding,
2025-09-22T18:35:12:   74 |     })
2025-09-22T18:35:39: Error: Route "/api/offers/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:35:39:     at PATCH (src/app/api/offers/[id]/route.ts:33:27)
2025-09-22T18:35:39:   31 |     // Получаем текущий оффер для аудита
2025-09-22T18:35:39:   32 |     const currentOffer = await prisma.offer.findUnique({
2025-09-22T18:35:39: > 33 |       where: { id: params.id },
2025-09-22T18:35:39:      |                           ^
2025-09-22T18:35:39:   34 |       include: { landings: true }
2025-09-22T18:35:39:   35 |     })
2025-09-22T18:35:39:   36 |     
2025-09-22T18:35:39: Error: Route "/api/offers/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:35:39:     at PATCH (src/app/api/offers/[id]/route.ts:42:27)
2025-09-22T18:35:39:   40 |     
2025-09-22T18:35:39:   41 |     const updatedOffer = await prisma.offer.update({
2025-09-22T18:35:39: > 42 |       where: { id: params.id },
2025-09-22T18:35:39:      |                           ^
2025-09-22T18:35:39:   43 |       data,
2025-09-22T18:35:39:   44 |       include: { landings: true }
2025-09-22T18:35:39:   45 |     })
2025-09-22T18:35:39: Error: Route "/api/offers/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:35:39:     at PATCH (src/app/api/offers/[id]/route.ts:52:24)
2025-09-22T18:35:39:   50 |       action: 'update',
2025-09-22T18:35:39:   51 |       entity: 'offer',
2025-09-22T18:35:39: > 52 |       entityId: params.id,
2025-09-22T18:35:39:      |                        ^
2025-09-22T18:35:39:   53 |       before: currentOffer,
2025-09-22T18:35:39:   54 |       after: updatedOffer,
2025-09-22T18:35:39:   55 |     })
2025-09-22T18:35:41: Error: Route "/api/offers/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:35:41:     at PATCH (src/app/api/offers/[id]/route.ts:33:27)
2025-09-22T18:35:41:   31 |     // Получаем текущий оффер для аудита
2025-09-22T18:35:41:   32 |     const currentOffer = await prisma.offer.findUnique({
2025-09-22T18:35:41: > 33 |       where: { id: params.id },
2025-09-22T18:35:41:      |                           ^
2025-09-22T18:35:41:   34 |       include: { landings: true }
2025-09-22T18:35:41:   35 |     })
2025-09-22T18:35:41:   36 |     
2025-09-22T18:35:41: Error: Route "/api/offers/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:35:41:     at PATCH (src/app/api/offers/[id]/route.ts:42:27)
2025-09-22T18:35:41:   40 |     
2025-09-22T18:35:41:   41 |     const updatedOffer = await prisma.offer.update({
2025-09-22T18:35:41: > 42 |       where: { id: params.id },
2025-09-22T18:35:41:      |                           ^
2025-09-22T18:35:41:   43 |       data,
2025-09-22T18:35:41:   44 |       include: { landings: true }
2025-09-22T18:35:41:   45 |     })
2025-09-22T18:35:42: Error: Route "/api/offers/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:35:42:     at PATCH (src/app/api/offers/[id]/route.ts:52:24)
2025-09-22T18:35:42:   50 |       action: 'update',
2025-09-22T18:35:42:   51 |       entity: 'offer',
2025-09-22T18:35:42: > 52 |       entityId: params.id,
2025-09-22T18:35:42:      |                        ^
2025-09-22T18:35:42:   53 |       before: currentOffer,
2025-09-22T18:35:42:   54 |       after: updatedOffer,
2025-09-22T18:35:42:   55 |     })
2025-09-22T18:35:43: Error: Route "/api/offers/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:35:43:     at PATCH (src/app/api/offers/[id]/route.ts:33:27)
2025-09-22T18:35:43:   31 |     // Получаем текущий оффер для аудита
2025-09-22T18:35:43:   32 |     const currentOffer = await prisma.offer.findUnique({
2025-09-22T18:35:43: > 33 |       where: { id: params.id },
2025-09-22T18:35:43:      |                           ^
2025-09-22T18:35:43:   34 |       include: { landings: true }
2025-09-22T18:35:43:   35 |     })
2025-09-22T18:35:43:   36 |     
2025-09-22T18:35:43: Error: Route "/api/offers/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:35:43:     at PATCH (src/app/api/offers/[id]/route.ts:42:27)
2025-09-22T18:35:43:   40 |     
2025-09-22T18:35:43:   41 |     const updatedOffer = await prisma.offer.update({
2025-09-22T18:35:43: > 42 |       where: { id: params.id },
2025-09-22T18:35:43:      |                           ^
2025-09-22T18:35:43:   43 |       data,
2025-09-22T18:35:43:   44 |       include: { landings: true }
2025-09-22T18:35:43:   45 |     })
2025-09-22T18:35:43: Error: Route "/api/offers/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:35:43:     at PATCH (src/app/api/offers/[id]/route.ts:52:24)
2025-09-22T18:35:43:   50 |       action: 'update',
2025-09-22T18:35:43:   51 |       entity: 'offer',
2025-09-22T18:35:43: > 52 |       entityId: params.id,
2025-09-22T18:35:43:      |                        ^
2025-09-22T18:35:43:   53 |       before: currentOffer,
2025-09-22T18:35:43:   54 |       after: updatedOffer,
2025-09-22T18:35:43:   55 |     })
2025-09-22T18:35:54: Error: Route "/api/offers/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:35:54:     at PATCH (src/app/api/offers/[id]/route.ts:33:27)
2025-09-22T18:35:54:   31 |     // Получаем текущий оффер для аудита
2025-09-22T18:35:54:   32 |     const currentOffer = await prisma.offer.findUnique({
2025-09-22T18:35:54: > 33 |       where: { id: params.id },
2025-09-22T18:35:54:      |                           ^
2025-09-22T18:35:54:   34 |       include: { landings: true }
2025-09-22T18:35:54:   35 |     })
2025-09-22T18:35:54:   36 |     
2025-09-22T18:35:54: Error: Route "/api/offers/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:35:54:     at PATCH (src/app/api/offers/[id]/route.ts:42:27)
2025-09-22T18:35:54:   40 |     
2025-09-22T18:35:54:   41 |     const updatedOffer = await prisma.offer.update({
2025-09-22T18:35:54: > 42 |       where: { id: params.id },
2025-09-22T18:35:54:      |                           ^
2025-09-22T18:35:54:   43 |       data,
2025-09-22T18:35:54:   44 |       include: { landings: true }
2025-09-22T18:35:54:   45 |     })
2025-09-22T18:35:54: Error: Route "/api/offers/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:35:54:     at PATCH (src/app/api/offers/[id]/route.ts:52:24)
2025-09-22T18:35:54:   50 |       action: 'update',
2025-09-22T18:35:54:   51 |       entity: 'offer',
2025-09-22T18:35:54: > 52 |       entityId: params.id,
2025-09-22T18:35:54:      |                        ^
2025-09-22T18:35:54:   53 |       before: currentOffer,
2025-09-22T18:35:54:   54 |       after: updatedOffer,
2025-09-22T18:35:54:   55 |     })
2025-09-22T18:37:22: Error: Route "/api/offers/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:37:22:     at PATCH (src/app/api/offers/[id]/route.ts:33:27)
2025-09-22T18:37:22:   31 |     // Получаем текущий оффер для аудита
2025-09-22T18:37:22:   32 |     const currentOffer = await prisma.offer.findUnique({
2025-09-22T18:37:22: > 33 |       where: { id: params.id },
2025-09-22T18:37:22:      |                           ^
2025-09-22T18:37:22:   34 |       include: { landings: true }
2025-09-22T18:37:22:   35 |     })
2025-09-22T18:37:22:   36 |     
2025-09-22T18:37:22: Error: Route "/api/offers/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:37:22:     at PATCH (src/app/api/offers/[id]/route.ts:42:27)
2025-09-22T18:37:22:   40 |     
2025-09-22T18:37:22:   41 |     const updatedOffer = await prisma.offer.update({
2025-09-22T18:37:22: > 42 |       where: { id: params.id },
2025-09-22T18:37:22:      |                           ^
2025-09-22T18:37:22:   43 |       data,
2025-09-22T18:37:22:   44 |       include: { landings: true }
2025-09-22T18:37:22:   45 |     })
2025-09-22T18:37:22: Error: Route "/api/offers/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:37:22:     at PATCH (src/app/api/offers/[id]/route.ts:52:24)
2025-09-22T18:37:22:   50 |       action: 'update',
2025-09-22T18:37:22:   51 |       entity: 'offer',
2025-09-22T18:37:22: > 52 |       entityId: params.id,
2025-09-22T18:37:22:      |                        ^
2025-09-22T18:37:22:   53 |       before: currentOffer,
2025-09-22T18:37:22:   54 |       after: updatedOffer,
2025-09-22T18:37:22:   55 |     })
2025-09-22T18:37:23: Error: Route "/api/offers/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:37:23:     at PATCH (src/app/api/offers/[id]/route.ts:33:27)
2025-09-22T18:37:23:   31 |     // Получаем текущий оффер для аудита
2025-09-22T18:37:23:   32 |     const currentOffer = await prisma.offer.findUnique({
2025-09-22T18:37:23: > 33 |       where: { id: params.id },
2025-09-22T18:37:23:      |                           ^
2025-09-22T18:37:23:   34 |       include: { landings: true }
2025-09-22T18:37:23:   35 |     })
2025-09-22T18:37:23:   36 |     
2025-09-22T18:37:23: Error: Route "/api/offers/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:37:23:     at PATCH (src/app/api/offers/[id]/route.ts:42:27)
2025-09-22T18:37:23:   40 |     
2025-09-22T18:37:23:   41 |     const updatedOffer = await prisma.offer.update({
2025-09-22T18:37:23: > 42 |       where: { id: params.id },
2025-09-22T18:37:23:      |                           ^
2025-09-22T18:37:23:   43 |       data,
2025-09-22T18:37:23:   44 |       include: { landings: true }
2025-09-22T18:37:23:   45 |     })
2025-09-22T18:37:23: Error: Route "/api/offers/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:37:23:     at PATCH (src/app/api/offers/[id]/route.ts:52:24)
2025-09-22T18:37:23:   50 |       action: 'update',
2025-09-22T18:37:23:   51 |       entity: 'offer',
2025-09-22T18:37:23: > 52 |       entityId: params.id,
2025-09-22T18:37:23:      |                        ^
2025-09-22T18:37:23:   53 |       before: currentOffer,
2025-09-22T18:37:23:   54 |       after: updatedOffer,
2025-09-22T18:37:23:   55 |     })
2025-09-22T18:37:48: Error: Route "/api/offers/[id]/image" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:37:48:     at POST (src/app/api/offers/[id]/image/route.ts:30:27)
2025-09-22T18:37:48:   28 |     // Проверяем, что оффер существует
2025-09-22T18:37:48:   29 |     const offer = await prisma.offer.findUnique({
2025-09-22T18:37:48: > 30 |       where: { id: params.id }
2025-09-22T18:37:48:      |                           ^
2025-09-22T18:37:48:   31 |     })
2025-09-22T18:37:48:   32 |     
2025-09-22T18:37:48:   33 |     if (!offer) {
2025-09-22T18:37:48: Error: Route "/api/offers/[id]/image" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:37:48:     at POST (src/app/api/offers/[id]/image/route.ts:65:32)
2025-09-22T18:37:48:   63 |     // Генерируем уникальное имя файла
2025-09-22T18:37:48:   64 |     const extension = path.extname(file.name)
2025-09-22T18:37:48: > 65 |     const filename = `${params.id}-${Date.now()}${extension}`
2025-09-22T18:37:48:      |                                ^
2025-09-22T18:37:48:   66 |     const filepath = path.join(uploadsDir, filename)
2025-09-22T18:37:48:   67 |
2025-09-22T18:37:48:   68 |     // Сохраняем файл
2025-09-22T18:37:48: Error: Route "/api/offers/[id]/image" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:37:48:     at POST (src/app/api/offers/[id]/image/route.ts:81:27)
2025-09-22T18:37:48:   79 |     // Обновляем оффер с новым URL изображения
2025-09-22T18:37:48:   80 |     const updatedOffer = await prisma.offer.update({
2025-09-22T18:37:48: > 81 |       where: { id: params.id },
2025-09-22T18:37:48:      |                           ^
2025-09-22T18:37:48:   82 |       data: { imageUrl },
2025-09-22T18:37:48:   83 |       include: { landings: true }
2025-09-22T18:37:48:   84 |     })
2025-09-22T18:37:49: Error: Route "/api/offers/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:37:49:     at PATCH (src/app/api/offers/[id]/route.ts:33:27)
2025-09-22T18:37:49:   31 |     // Получаем текущий оффер для аудита
2025-09-22T18:37:49:   32 |     const currentOffer = await prisma.offer.findUnique({
2025-09-22T18:37:49: > 33 |       where: { id: params.id },
2025-09-22T18:37:49:      |                           ^
2025-09-22T18:37:49:   34 |       include: { landings: true }
2025-09-22T18:37:49:   35 |     })
2025-09-22T18:37:49:   36 |     
2025-09-22T18:37:49: Error: Route "/api/offers/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:37:49:     at PATCH (src/app/api/offers/[id]/route.ts:42:27)
2025-09-22T18:37:49:   40 |     
2025-09-22T18:37:49:   41 |     const updatedOffer = await prisma.offer.update({
2025-09-22T18:37:49: > 42 |       where: { id: params.id },
2025-09-22T18:37:49:      |                           ^
2025-09-22T18:37:49:   43 |       data,
2025-09-22T18:37:49:   44 |       include: { landings: true }
2025-09-22T18:37:49:   45 |     })
2025-09-22T18:37:49: Error: Route "/api/offers/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:37:49:     at PATCH (src/app/api/offers/[id]/route.ts:52:24)
2025-09-22T18:37:49:   50 |       action: 'update',
2025-09-22T18:37:49:   51 |       entity: 'offer',
2025-09-22T18:37:49: > 52 |       entityId: params.id,
2025-09-22T18:37:49:      |                        ^
2025-09-22T18:37:49:   53 |       before: currentOffer,
2025-09-22T18:37:49:   54 |       after: updatedOffer,
2025-09-22T18:37:49:   55 |     })
2025-09-22T18:37:51: Error: Route "/api/offers/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:37:51:     at PATCH (src/app/api/offers/[id]/route.ts:33:27)
2025-09-22T18:37:51:   31 |     // Получаем текущий оффер для аудита
2025-09-22T18:37:51:   32 |     const currentOffer = await prisma.offer.findUnique({
2025-09-22T18:37:51: > 33 |       where: { id: params.id },
2025-09-22T18:37:51:      |                           ^
2025-09-22T18:37:51:   34 |       include: { landings: true }
2025-09-22T18:37:51:   35 |     })
2025-09-22T18:37:51:   36 |     
2025-09-22T18:37:51: Error: Route "/api/offers/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:37:51:     at PATCH (src/app/api/offers/[id]/route.ts:42:27)
2025-09-22T18:37:51:   40 |     
2025-09-22T18:37:51:   41 |     const updatedOffer = await prisma.offer.update({
2025-09-22T18:37:51: > 42 |       where: { id: params.id },
2025-09-22T18:37:51:      |                           ^
2025-09-22T18:37:51:   43 |       data,
2025-09-22T18:37:51:   44 |       include: { landings: true }
2025-09-22T18:37:51:   45 |     })
2025-09-22T18:37:51: Error: Route "/api/offers/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:37:51:     at PATCH (src/app/api/offers/[id]/route.ts:52:24)
2025-09-22T18:37:51:   50 |       action: 'update',
2025-09-22T18:37:51:   51 |       entity: 'offer',
2025-09-22T18:37:51: > 52 |       entityId: params.id,
2025-09-22T18:37:51:      |                        ^
2025-09-22T18:37:51:   53 |       before: currentOffer,
2025-09-22T18:37:51:   54 |       after: updatedOffer,
2025-09-22T18:37:51:   55 |     })
2025-09-22T18:37:54: Error: Route "/api/offers/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:37:54:     at PATCH (src/app/api/offers/[id]/route.ts:33:27)
2025-09-22T18:37:54:   31 |     // Получаем текущий оффер для аудита
2025-09-22T18:37:54:   32 |     const currentOffer = await prisma.offer.findUnique({
2025-09-22T18:37:54: > 33 |       where: { id: params.id },
2025-09-22T18:37:54:      |                           ^
2025-09-22T18:37:54:   34 |       include: { landings: true }
2025-09-22T18:37:54:   35 |     })
2025-09-22T18:37:54:   36 |     
2025-09-22T18:37:54: Error: Route "/api/offers/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:37:54:     at PATCH (src/app/api/offers/[id]/route.ts:42:27)
2025-09-22T18:37:54:   40 |     
2025-09-22T18:37:54:   41 |     const updatedOffer = await prisma.offer.update({
2025-09-22T18:37:54: > 42 |       where: { id: params.id },
2025-09-22T18:37:54:      |                           ^
2025-09-22T18:37:54:   43 |       data,
2025-09-22T18:37:54:   44 |       include: { landings: true }
2025-09-22T18:37:54:   45 |     })
2025-09-22T18:37:54: Error: Route "/api/offers/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:37:54:     at PATCH (src/app/api/offers/[id]/route.ts:52:24)
2025-09-22T18:37:54:   50 |       action: 'update',
2025-09-22T18:37:54:   51 |       entity: 'offer',
2025-09-22T18:37:54: > 52 |       entityId: params.id,
2025-09-22T18:37:54:      |                        ^
2025-09-22T18:37:54:   53 |       before: currentOffer,
2025-09-22T18:37:54:   54 |       after: updatedOffer,
2025-09-22T18:37:54:   55 |     })
2025-09-22T18:39:15: Error: Route "/api/offers/[id]/landings" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:39:15:     at POST (src/app/api/offers/[id]/landings/route.ts:33:27)
2025-09-22T18:39:15:   31 |     // Проверяем, что оффер существует
2025-09-22T18:39:15:   32 |     const offer = await prisma.offer.findUnique({
2025-09-22T18:39:15: > 33 |       where: { id: params.id }
2025-09-22T18:39:15:      |                           ^
2025-09-22T18:39:15:   34 |     })
2025-09-22T18:39:15:   35 |     
2025-09-22T18:39:15:   36 |     if (!offer) {
2025-09-22T18:39:15: Error: Route "/api/offers/[id]/landings" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:39:15:     at POST (src/app/api/offers/[id]/landings/route.ts:44:27)
2025-09-22T18:39:15:   42 |       const existingLanding = await prisma.landing.findFirst({
2025-09-22T18:39:15:   43 |         where: {
2025-09-22T18:39:15: > 44 |           offerId: params.id,
2025-09-22T18:39:15:      |                           ^
2025-09-22T18:39:15:   45 |           type: data.type,
2025-09-22T18:39:15:   46 |           extId: data.extId,
2025-09-22T18:39:15:   47 |         }
2025-09-22T18:39:15: Error: Route "/api/offers/[id]/landings" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:39:15:     at POST (src/app/api/offers/[id]/landings/route.ts:61:25)
2025-09-22T18:39:15:   59 |     const maxOrder = await prisma.landing.findFirst({
2025-09-22T18:39:15:   60 |       where: {
2025-09-22T18:39:15: > 61 |         offerId: params.id,
2025-09-22T18:39:15:      |                         ^
2025-09-22T18:39:15:   62 |         type: data.type,
2025-09-22T18:39:15:   63 |       },
2025-09-22T18:39:15:   64 |       select: { order: true },
2025-09-22T18:39:15: Error: Route "/api/offers/[id]/landings" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:39:15:     at POST (src/app/api/offers/[id]/landings/route.ts:71:25)
2025-09-22T18:39:15:   69 |       data: {
2025-09-22T18:39:15:   70 |         ...data,
2025-09-22T18:39:15: > 71 |         offerId: params.id,
2025-09-22T18:39:15:      |                         ^
2025-09-22T18:39:15:   72 |         order: (maxOrder?.order || 0) + 10,
2025-09-22T18:39:15:   73 |       },
2025-09-22T18:39:15:   74 |       include: {
2025-09-22T18:39:16: Error: Route "/api/offers/[id]/landings" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:39:16:     at POST (src/app/api/offers/[id]/landings/route.ts:33:27)
2025-09-22T18:39:16:   31 |     // Проверяем, что оффер существует
2025-09-22T18:39:16:   32 |     const offer = await prisma.offer.findUnique({
2025-09-22T18:39:16: > 33 |       where: { id: params.id }
2025-09-22T18:39:16:      |                           ^
2025-09-22T18:39:16:   34 |     })
2025-09-22T18:39:16:   35 |     
2025-09-22T18:39:16:   36 |     if (!offer) {
2025-09-22T18:39:16: Error: Route "/api/offers/[id]/landings" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:39:16:     at POST (src/app/api/offers/[id]/landings/route.ts:44:27)
2025-09-22T18:39:16:   42 |       const existingLanding = await prisma.landing.findFirst({
2025-09-22T18:39:16:   43 |         where: {
2025-09-22T18:39:16: > 44 |           offerId: params.id,
2025-09-22T18:39:16:      |                           ^
2025-09-22T18:39:16:   45 |           type: data.type,
2025-09-22T18:39:16:   46 |           extId: data.extId,
2025-09-22T18:39:16:   47 |         }
2025-09-22T18:39:16: Error: Route "/api/offers/[id]/landings" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:39:16:     at POST (src/app/api/offers/[id]/landings/route.ts:61:25)
2025-09-22T18:39:16:   59 |     const maxOrder = await prisma.landing.findFirst({
2025-09-22T18:39:16:   60 |       where: {
2025-09-22T18:39:16: > 61 |         offerId: params.id,
2025-09-22T18:39:16:      |                         ^
2025-09-22T18:39:16:   62 |         type: data.type,
2025-09-22T18:39:16:   63 |       },
2025-09-22T18:39:16:   64 |       select: { order: true },
2025-09-22T18:39:16: Error: Route "/api/offers/[id]/landings" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:39:16:     at POST (src/app/api/offers/[id]/landings/route.ts:71:25)
2025-09-22T18:39:16:   69 |       data: {
2025-09-22T18:39:16:   70 |         ...data,
2025-09-22T18:39:16: > 71 |         offerId: params.id,
2025-09-22T18:39:16:      |                         ^
2025-09-22T18:39:16:   72 |         order: (maxOrder?.order || 0) + 10,
2025-09-22T18:39:16:   73 |       },
2025-09-22T18:39:16:   74 |       include: {
2025-09-22T18:39:17: Error: Route "/api/offers/[id]/landings" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:39:17:     at POST (src/app/api/offers/[id]/landings/route.ts:33:27)
2025-09-22T18:39:17:   31 |     // Проверяем, что оффер существует
2025-09-22T18:39:17:   32 |     const offer = await prisma.offer.findUnique({
2025-09-22T18:39:17: > 33 |       where: { id: params.id }
2025-09-22T18:39:17:      |                           ^
2025-09-22T18:39:17:   34 |     })
2025-09-22T18:39:17:   35 |     
2025-09-22T18:39:17:   36 |     if (!offer) {
2025-09-22T18:39:17: Error: Route "/api/offers/[id]/landings" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:39:17:     at POST (src/app/api/offers/[id]/landings/route.ts:44:27)
2025-09-22T18:39:17:   42 |       const existingLanding = await prisma.landing.findFirst({
2025-09-22T18:39:17:   43 |         where: {
2025-09-22T18:39:17: > 44 |           offerId: params.id,
2025-09-22T18:39:17:      |                           ^
2025-09-22T18:39:17:   45 |           type: data.type,
2025-09-22T18:39:17:   46 |           extId: data.extId,
2025-09-22T18:39:17:   47 |         }
2025-09-22T18:39:17: Error: Route "/api/offers/[id]/landings" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:39:17:     at POST (src/app/api/offers/[id]/landings/route.ts:61:25)
2025-09-22T18:39:17:   59 |     const maxOrder = await prisma.landing.findFirst({
2025-09-22T18:39:17:   60 |       where: {
2025-09-22T18:39:17: > 61 |         offerId: params.id,
2025-09-22T18:39:17:      |                         ^
2025-09-22T18:39:17:   62 |         type: data.type,
2025-09-22T18:39:17:   63 |       },
2025-09-22T18:39:17:   64 |       select: { order: true },
2025-09-22T18:39:17: Error: Route "/api/offers/[id]/landings" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:39:17:     at POST (src/app/api/offers/[id]/landings/route.ts:71:25)
2025-09-22T18:39:17:   69 |       data: {
2025-09-22T18:39:17:   70 |         ...data,
2025-09-22T18:39:17: > 71 |         offerId: params.id,
2025-09-22T18:39:17:      |                         ^
2025-09-22T18:39:17:   72 |         order: (maxOrder?.order || 0) + 10,
2025-09-22T18:39:17:   73 |       },
2025-09-22T18:39:17:   74 |       include: {
2025-09-22T18:39:53: Error: Route "/api/landings/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:39:53:     at PATCH (src/app/api/landings/[id]/route.ts:33:27)
2025-09-22T18:39:53:   31 |     // Получаем текущий лендинг для аудита
2025-09-22T18:39:53:   32 |     const currentLanding = await prisma.landing.findUnique({
2025-09-22T18:39:53: > 33 |       where: { id: params.id },
2025-09-22T18:39:53:      |                           ^
2025-09-22T18:39:53:   34 |       include: { offer: true }
2025-09-22T18:39:53:   35 |     })
2025-09-22T18:39:53:   36 |     
2025-09-22T18:39:54: Error: Route "/api/landings/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:39:54:     at PATCH (src/app/api/landings/[id]/route.ts:61:27)
2025-09-22T18:39:54:   59 |     
2025-09-22T18:39:54:   60 |     const updatedLanding = await prisma.landing.update({
2025-09-22T18:39:54: > 61 |       where: { id: params.id },
2025-09-22T18:39:54:      |                           ^
2025-09-22T18:39:54:   62 |       data,
2025-09-22T18:39:54:   63 |       include: { offer: true }
2025-09-22T18:39:54:   64 |     })
2025-09-22T18:39:54: Error: Route "/api/landings/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:39:54:     at PATCH (src/app/api/landings/[id]/route.ts:71:24)
2025-09-22T18:39:54:   69 |       action: 'update',
2025-09-22T18:39:54:   70 |       entity: 'landing',
2025-09-22T18:39:54: > 71 |       entityId: params.id,
2025-09-22T18:39:54:      |                        ^
2025-09-22T18:39:54:   72 |       before: currentLanding,
2025-09-22T18:39:54:   73 |       after: updatedLanding,
2025-09-22T18:39:54:   74 |     })
2025-09-22T18:39:54: Error: Route "/api/landings/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:39:54:     at PATCH (src/app/api/landings/[id]/route.ts:33:27)
2025-09-22T18:39:54:   31 |     // Получаем текущий лендинг для аудита
2025-09-22T18:39:54:   32 |     const currentLanding = await prisma.landing.findUnique({
2025-09-22T18:39:54: > 33 |       where: { id: params.id },
2025-09-22T18:39:54:      |                           ^
2025-09-22T18:39:54:   34 |       include: { offer: true }
2025-09-22T18:39:54:   35 |     })
2025-09-22T18:39:54:   36 |     
2025-09-22T18:39:54: Error: Route "/api/landings/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:39:54:     at PATCH (src/app/api/landings/[id]/route.ts:61:27)
2025-09-22T18:39:54:   59 |     
2025-09-22T18:39:54:   60 |     const updatedLanding = await prisma.landing.update({
2025-09-22T18:39:54: > 61 |       where: { id: params.id },
2025-09-22T18:39:54:      |                           ^
2025-09-22T18:39:54:   62 |       data,
2025-09-22T18:39:54:   63 |       include: { offer: true }
2025-09-22T18:39:54:   64 |     })
2025-09-22T18:39:54: Error: Route "/api/landings/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:39:54:     at PATCH (src/app/api/landings/[id]/route.ts:71:24)
2025-09-22T18:39:54:   69 |       action: 'update',
2025-09-22T18:39:54:   70 |       entity: 'landing',
2025-09-22T18:39:54: > 71 |       entityId: params.id,
2025-09-22T18:39:54:      |                        ^
2025-09-22T18:39:54:   72 |       before: currentLanding,
2025-09-22T18:39:54:   73 |       after: updatedLanding,
2025-09-22T18:39:54:   74 |     })
2025-09-22T18:39:55: Error: Route "/api/landings/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:39:55:     at PATCH (src/app/api/landings/[id]/route.ts:33:27)
2025-09-22T18:39:55:   31 |     // Получаем текущий лендинг для аудита
2025-09-22T18:39:55:   32 |     const currentLanding = await prisma.landing.findUnique({
2025-09-22T18:39:55: > 33 |       where: { id: params.id },
2025-09-22T18:39:55:      |                           ^
2025-09-22T18:39:55:   34 |       include: { offer: true }
2025-09-22T18:39:55:   35 |     })
2025-09-22T18:39:55:   36 |     
2025-09-22T18:39:55: Error: Route "/api/landings/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:39:55:     at PATCH (src/app/api/landings/[id]/route.ts:61:27)
2025-09-22T18:39:55:   59 |     
2025-09-22T18:39:55:   60 |     const updatedLanding = await prisma.landing.update({
2025-09-22T18:39:55: > 61 |       where: { id: params.id },
2025-09-22T18:39:55:      |                           ^
2025-09-22T18:39:55:   62 |       data,
2025-09-22T18:39:55:   63 |       include: { offer: true }
2025-09-22T18:39:55:   64 |     })
2025-09-22T18:39:55: Error: Route "/api/landings/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:39:55:     at PATCH (src/app/api/landings/[id]/route.ts:71:24)
2025-09-22T18:39:55:   69 |       action: 'update',
2025-09-22T18:39:55:   70 |       entity: 'landing',
2025-09-22T18:39:55: > 71 |       entityId: params.id,
2025-09-22T18:39:55:      |                        ^
2025-09-22T18:39:55:   72 |       before: currentLanding,
2025-09-22T18:39:55:   73 |       after: updatedLanding,
2025-09-22T18:39:55:   74 |     })
2025-09-22T18:40:03: Error: Route "/api/admin/partners/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:40:03:     at DELETE (src/app/api/admin/partners/[id]/route.ts:87:27)
2025-09-22T18:40:03:   85 |
2025-09-22T18:40:03:   86 |     const existing = await prisma.partner.findUnique({
2025-09-22T18:40:03: > 87 |       where: { id: params.id }
2025-09-22T18:40:03:      |                           ^
2025-09-22T18:40:03:   88 |     })
2025-09-22T18:40:03:   89 |
2025-09-22T18:40:03:   90 |     if (!existing) {
2025-09-22T18:40:04: Error: Route "/api/admin/partners/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:40:04:     at DELETE (src/app/api/admin/partners/[id]/route.ts:99:27)
2025-09-22T18:40:04:    97 |     // Полное удаление из базы данных
2025-09-22T18:40:04:    98 |     await prisma.partner.delete({
2025-09-22T18:40:04: >  99 |       where: { id: params.id }
2025-09-22T18:40:04:       |                           ^
2025-09-22T18:40:04:   100 |     })
2025-09-22T18:40:04:   101 |
2025-09-22T18:40:04:   102 |     return NextResponse.json({ message: 'Partner deleted' })
2025-09-22T18:40:27: Error: Route "/api/offers/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:40:27:     at PATCH (src/app/api/offers/[id]/route.ts:33:27)
2025-09-22T18:40:27:   31 |     // Получаем текущий оффер для аудита
2025-09-22T18:40:27:   32 |     const currentOffer = await prisma.offer.findUnique({
2025-09-22T18:40:27: > 33 |       where: { id: params.id },
2025-09-22T18:40:27:      |                           ^
2025-09-22T18:40:27:   34 |       include: { landings: true }
2025-09-22T18:40:27:   35 |     })
2025-09-22T18:40:27:   36 |     
2025-09-22T18:40:27: Error: Route "/api/offers/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:40:27:     at PATCH (src/app/api/offers/[id]/route.ts:42:27)
2025-09-22T18:40:27:   40 |     
2025-09-22T18:40:27:   41 |     const updatedOffer = await prisma.offer.update({
2025-09-22T18:40:27: > 42 |       where: { id: params.id },
2025-09-22T18:40:27:      |                           ^
2025-09-22T18:40:27:   43 |       data,
2025-09-22T18:40:27:   44 |       include: { landings: true }
2025-09-22T18:40:27:   45 |     })
2025-09-22T18:40:27: Error: Route "/api/offers/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:40:27:     at PATCH (src/app/api/offers/[id]/route.ts:52:24)
2025-09-22T18:40:27:   50 |       action: 'update',
2025-09-22T18:40:27:   51 |       entity: 'offer',
2025-09-22T18:40:27: > 52 |       entityId: params.id,
2025-09-22T18:40:27:      |                        ^
2025-09-22T18:40:27:   53 |       before: currentOffer,
2025-09-22T18:40:27:   54 |       after: updatedOffer,
2025-09-22T18:40:27:   55 |     })
2025-09-22T18:40:29: Error: Route "/api/offers/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:40:29:     at PATCH (src/app/api/offers/[id]/route.ts:33:27)
2025-09-22T18:40:29:   31 |     // Получаем текущий оффер для аудита
2025-09-22T18:40:29:   32 |     const currentOffer = await prisma.offer.findUnique({
2025-09-22T18:40:29: > 33 |       where: { id: params.id },
2025-09-22T18:40:29:      |                           ^
2025-09-22T18:40:29:   34 |       include: { landings: true }
2025-09-22T18:40:29:   35 |     })
2025-09-22T18:40:29:   36 |     
2025-09-22T18:40:29: Error: Route "/api/offers/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:40:29:     at PATCH (src/app/api/offers/[id]/route.ts:42:27)
2025-09-22T18:40:29:   40 |     
2025-09-22T18:40:29:   41 |     const updatedOffer = await prisma.offer.update({
2025-09-22T18:40:29: > 42 |       where: { id: params.id },
2025-09-22T18:40:29:      |                           ^
2025-09-22T18:40:29:   43 |       data,
2025-09-22T18:40:29:   44 |       include: { landings: true }
2025-09-22T18:40:29:   45 |     })
2025-09-22T18:40:29: Error: Route "/api/offers/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:40:29:     at PATCH (src/app/api/offers/[id]/route.ts:52:24)
2025-09-22T18:40:29:   50 |       action: 'update',
2025-09-22T18:40:29:   51 |       entity: 'offer',
2025-09-22T18:40:29: > 52 |       entityId: params.id,
2025-09-22T18:40:29:      |                        ^
2025-09-22T18:40:29:   53 |       before: currentOffer,
2025-09-22T18:40:29:   54 |       after: updatedOffer,
2025-09-22T18:40:29:   55 |     })
2025-09-22T18:40:32: Error: Route "/api/offers/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:40:32:     at PATCH (src/app/api/offers/[id]/route.ts:33:27)
2025-09-22T18:40:32:   31 |     // Получаем текущий оффер для аудита
2025-09-22T18:40:32:   32 |     const currentOffer = await prisma.offer.findUnique({
2025-09-22T18:40:32: > 33 |       where: { id: params.id },
2025-09-22T18:40:32:      |                           ^
2025-09-22T18:40:32:   34 |       include: { landings: true }
2025-09-22T18:40:32:   35 |     })
2025-09-22T18:40:32:   36 |     
2025-09-22T18:40:32: Error: Route "/api/offers/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:40:32:     at PATCH (src/app/api/offers/[id]/route.ts:42:27)
2025-09-22T18:40:32:   40 |     
2025-09-22T18:40:32:   41 |     const updatedOffer = await prisma.offer.update({
2025-09-22T18:40:32: > 42 |       where: { id: params.id },
2025-09-22T18:40:32:      |                           ^
2025-09-22T18:40:32:   43 |       data,
2025-09-22T18:40:32:   44 |       include: { landings: true }
2025-09-22T18:40:32:   45 |     })
2025-09-22T18:40:32: Error: Route "/api/offers/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:40:32:     at PATCH (src/app/api/offers/[id]/route.ts:52:24)
2025-09-22T18:40:32:   50 |       action: 'update',
2025-09-22T18:40:32:   51 |       entity: 'offer',
2025-09-22T18:40:32: > 52 |       entityId: params.id,
2025-09-22T18:40:32:      |                        ^
2025-09-22T18:40:32:   53 |       before: currentOffer,
2025-09-22T18:40:32:   54 |       after: updatedOffer,
2025-09-22T18:40:32:   55 |     })
2025-09-22T18:42:40: Error: Route "/api/offers/[id]/landings" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:42:40:     at POST (src/app/api/offers/[id]/landings/route.ts:33:27)
2025-09-22T18:42:40:   31 |     // Проверяем, что оффер существует
2025-09-22T18:42:40:   32 |     const offer = await prisma.offer.findUnique({
2025-09-22T18:42:40: > 33 |       where: { id: params.id }
2025-09-22T18:42:40:      |                           ^
2025-09-22T18:42:40:   34 |     })
2025-09-22T18:42:40:   35 |     
2025-09-22T18:42:40:   36 |     if (!offer) {
2025-09-22T18:42:40: Error: Route "/api/offers/[id]/landings" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:42:40:     at POST (src/app/api/offers/[id]/landings/route.ts:44:27)
2025-09-22T18:42:40:   42 |       const existingLanding = await prisma.landing.findFirst({
2025-09-22T18:42:40:   43 |         where: {
2025-09-22T18:42:40: > 44 |           offerId: params.id,
2025-09-22T18:42:40:      |                           ^
2025-09-22T18:42:40:   45 |           type: data.type,
2025-09-22T18:42:40:   46 |           extId: data.extId,
2025-09-22T18:42:40:   47 |         }
2025-09-22T18:42:41: Error: Route "/api/offers/[id]/landings" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:42:41:     at POST (src/app/api/offers/[id]/landings/route.ts:61:25)
2025-09-22T18:42:41:   59 |     const maxOrder = await prisma.landing.findFirst({
2025-09-22T18:42:41:   60 |       where: {
2025-09-22T18:42:41: > 61 |         offerId: params.id,
2025-09-22T18:42:41:      |                         ^
2025-09-22T18:42:41:   62 |         type: data.type,
2025-09-22T18:42:41:   63 |       },
2025-09-22T18:42:41:   64 |       select: { order: true },
2025-09-22T18:42:41: Error: Route "/api/offers/[id]/landings" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:42:41:     at POST (src/app/api/offers/[id]/landings/route.ts:71:25)
2025-09-22T18:42:41:   69 |       data: {
2025-09-22T18:42:41:   70 |         ...data,
2025-09-22T18:42:41: > 71 |         offerId: params.id,
2025-09-22T18:42:41:      |                         ^
2025-09-22T18:42:41:   72 |         order: (maxOrder?.order || 0) + 10,
2025-09-22T18:42:41:   73 |       },
2025-09-22T18:42:41:   74 |       include: {
2025-09-22T18:42:42: Error: Route "/api/offers/[id]/landings" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:42:42:     at POST (src/app/api/offers/[id]/landings/route.ts:33:27)
2025-09-22T18:42:42:   31 |     // Проверяем, что оффер существует
2025-09-22T18:42:42:   32 |     const offer = await prisma.offer.findUnique({
2025-09-22T18:42:42: > 33 |       where: { id: params.id }
2025-09-22T18:42:42:      |                           ^
2025-09-22T18:42:42:   34 |     })
2025-09-22T18:42:42:   35 |     
2025-09-22T18:42:42:   36 |     if (!offer) {
2025-09-22T18:42:42: Error: Route "/api/offers/[id]/landings" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:42:42:     at POST (src/app/api/offers/[id]/landings/route.ts:44:27)
2025-09-22T18:42:42:   42 |       const existingLanding = await prisma.landing.findFirst({
2025-09-22T18:42:42:   43 |         where: {
2025-09-22T18:42:42: > 44 |           offerId: params.id,
2025-09-22T18:42:42:      |                           ^
2025-09-22T18:42:42:   45 |           type: data.type,
2025-09-22T18:42:42:   46 |           extId: data.extId,
2025-09-22T18:42:42:   47 |         }
2025-09-22T18:42:42: Error: Route "/api/offers/[id]/landings" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:42:42:     at POST (src/app/api/offers/[id]/landings/route.ts:61:25)
2025-09-22T18:42:42:   59 |     const maxOrder = await prisma.landing.findFirst({
2025-09-22T18:42:42:   60 |       where: {
2025-09-22T18:42:42: > 61 |         offerId: params.id,
2025-09-22T18:42:42:      |                         ^
2025-09-22T18:42:42:   62 |         type: data.type,
2025-09-22T18:42:42:   63 |       },
2025-09-22T18:42:42:   64 |       select: { order: true },
2025-09-22T18:42:42: Error: Route "/api/offers/[id]/landings" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:42:42:     at POST (src/app/api/offers/[id]/landings/route.ts:71:25)
2025-09-22T18:42:42:   69 |       data: {
2025-09-22T18:42:42:   70 |         ...data,
2025-09-22T18:42:42: > 71 |         offerId: params.id,
2025-09-22T18:42:42:      |                         ^
2025-09-22T18:42:42:   72 |         order: (maxOrder?.order || 0) + 10,
2025-09-22T18:42:42:   73 |       },
2025-09-22T18:42:42:   74 |       include: {
2025-09-22T18:42:42: Error: Route "/api/offers/[id]/landings" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:42:42:     at POST (src/app/api/offers/[id]/landings/route.ts:33:27)
2025-09-22T18:42:42:   31 |     // Проверяем, что оффер существует
2025-09-22T18:42:42:   32 |     const offer = await prisma.offer.findUnique({
2025-09-22T18:42:42: > 33 |       where: { id: params.id }
2025-09-22T18:42:42:      |                           ^
2025-09-22T18:42:42:   34 |     })
2025-09-22T18:42:42:   35 |     
2025-09-22T18:42:42:   36 |     if (!offer) {
2025-09-22T18:42:43: Error: Route "/api/offers/[id]/landings" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:42:43:     at POST (src/app/api/offers/[id]/landings/route.ts:44:27)
2025-09-22T18:42:43:   42 |       const existingLanding = await prisma.landing.findFirst({
2025-09-22T18:42:43:   43 |         where: {
2025-09-22T18:42:43: > 44 |           offerId: params.id,
2025-09-22T18:42:43:      |                           ^
2025-09-22T18:42:43:   45 |           type: data.type,
2025-09-22T18:42:43:   46 |           extId: data.extId,
2025-09-22T18:42:43:   47 |         }
2025-09-22T18:42:43: Error: Route "/api/offers/[id]/landings" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:42:43:     at POST (src/app/api/offers/[id]/landings/route.ts:61:25)
2025-09-22T18:42:43:   59 |     const maxOrder = await prisma.landing.findFirst({
2025-09-22T18:42:43:   60 |       where: {
2025-09-22T18:42:43: > 61 |         offerId: params.id,
2025-09-22T18:42:43:      |                         ^
2025-09-22T18:42:43:   62 |         type: data.type,
2025-09-22T18:42:43:   63 |       },
2025-09-22T18:42:43:   64 |       select: { order: true },
2025-09-22T18:42:43: Error: Route "/api/offers/[id]/landings" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:42:43:     at POST (src/app/api/offers/[id]/landings/route.ts:71:25)
2025-09-22T18:42:43:   69 |       data: {
2025-09-22T18:42:43:   70 |         ...data,
2025-09-22T18:42:43: > 71 |         offerId: params.id,
2025-09-22T18:42:43:      |                         ^
2025-09-22T18:42:43:   72 |         order: (maxOrder?.order || 0) + 10,
2025-09-22T18:42:43:   73 |       },
2025-09-22T18:42:43:   74 |       include: {
2025-09-22T18:43:19: Error: Route "/api/offers/[id]/image" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:43:19:     at POST (src/app/api/offers/[id]/image/route.ts:30:27)
2025-09-22T18:43:19:   28 |     // Проверяем, что оффер существует
2025-09-22T18:43:19:   29 |     const offer = await prisma.offer.findUnique({
2025-09-22T18:43:19: > 30 |       where: { id: params.id }
2025-09-22T18:43:19:      |                           ^
2025-09-22T18:43:19:   31 |     })
2025-09-22T18:43:19:   32 |     
2025-09-22T18:43:19:   33 |     if (!offer) {
2025-09-22T18:43:20: Error: Route "/api/offers/[id]/image" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:43:20:     at POST (src/app/api/offers/[id]/image/route.ts:65:32)
2025-09-22T18:43:20:   63 |     // Генерируем уникальное имя файла
2025-09-22T18:43:20:   64 |     const extension = path.extname(file.name)
2025-09-22T18:43:20: > 65 |     const filename = `${params.id}-${Date.now()}${extension}`
2025-09-22T18:43:20:      |                                ^
2025-09-22T18:43:20:   66 |     const filepath = path.join(uploadsDir, filename)
2025-09-22T18:43:20:   67 |
2025-09-22T18:43:20:   68 |     // Сохраняем файл
2025-09-22T18:43:20: Error: Route "/api/offers/[id]/image" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:43:20:     at POST (src/app/api/offers/[id]/image/route.ts:81:27)
2025-09-22T18:43:20:   79 |     // Обновляем оффер с новым URL изображения
2025-09-22T18:43:20:   80 |     const updatedOffer = await prisma.offer.update({
2025-09-22T18:43:20: > 81 |       where: { id: params.id },
2025-09-22T18:43:20:      |                           ^
2025-09-22T18:43:20:   82 |       data: { imageUrl },
2025-09-22T18:43:20:   83 |       include: { landings: true }
2025-09-22T18:43:20:   84 |     })
2025-09-22T18:43:21: Error: Route "/api/offers/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:43:21:     at PATCH (src/app/api/offers/[id]/route.ts:33:27)
2025-09-22T18:43:21:   31 |     // Получаем текущий оффер для аудита
2025-09-22T18:43:21:   32 |     const currentOffer = await prisma.offer.findUnique({
2025-09-22T18:43:21: > 33 |       where: { id: params.id },
2025-09-22T18:43:21:      |                           ^
2025-09-22T18:43:21:   34 |       include: { landings: true }
2025-09-22T18:43:21:   35 |     })
2025-09-22T18:43:21:   36 |     
2025-09-22T18:43:21: Error: Route "/api/offers/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:43:21:     at PATCH (src/app/api/offers/[id]/route.ts:42:27)
2025-09-22T18:43:21:   40 |     
2025-09-22T18:43:21:   41 |     const updatedOffer = await prisma.offer.update({
2025-09-22T18:43:21: > 42 |       where: { id: params.id },
2025-09-22T18:43:21:      |                           ^
2025-09-22T18:43:21:   43 |       data,
2025-09-22T18:43:21:   44 |       include: { landings: true }
2025-09-22T18:43:21:   45 |     })
2025-09-22T18:43:21: Error: Route "/api/offers/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:43:21:     at PATCH (src/app/api/offers/[id]/route.ts:52:24)
2025-09-22T18:43:21:   50 |       action: 'update',
2025-09-22T18:43:21:   51 |       entity: 'offer',
2025-09-22T18:43:21: > 52 |       entityId: params.id,
2025-09-22T18:43:21:      |                        ^
2025-09-22T18:43:21:   53 |       before: currentOffer,
2025-09-22T18:43:21:   54 |       after: updatedOffer,
2025-09-22T18:43:21:   55 |     })
2025-09-22T18:43:45: Error: Route "/api/offers/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:43:45:     at PATCH (src/app/api/offers/[id]/route.ts:33:27)
2025-09-22T18:43:45:   31 |     // Получаем текущий оффер для аудита
2025-09-22T18:43:45:   32 |     const currentOffer = await prisma.offer.findUnique({
2025-09-22T18:43:45: > 33 |       where: { id: params.id },
2025-09-22T18:43:45:      |                           ^
2025-09-22T18:43:45:   34 |       include: { landings: true }
2025-09-22T18:43:45:   35 |     })
2025-09-22T18:43:45:   36 |     
2025-09-22T18:43:45: Error: Route "/api/offers/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:43:45:     at PATCH (src/app/api/offers/[id]/route.ts:42:27)
2025-09-22T18:43:45:   40 |     
2025-09-22T18:43:45:   41 |     const updatedOffer = await prisma.offer.update({
2025-09-22T18:43:45: > 42 |       where: { id: params.id },
2025-09-22T18:43:45:      |                           ^
2025-09-22T18:43:45:   43 |       data,
2025-09-22T18:43:45:   44 |       include: { landings: true }
2025-09-22T18:43:45:   45 |     })
2025-09-22T18:43:45: Error: Route "/api/offers/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:43:45:     at PATCH (src/app/api/offers/[id]/route.ts:52:24)
2025-09-22T18:43:45:   50 |       action: 'update',
2025-09-22T18:43:45:   51 |       entity: 'offer',
2025-09-22T18:43:45: > 52 |       entityId: params.id,
2025-09-22T18:43:45:      |                        ^
2025-09-22T18:43:45:   53 |       before: currentOffer,
2025-09-22T18:43:45:   54 |       after: updatedOffer,
2025-09-22T18:43:45:   55 |     })
2025-09-22T18:45:13: Error: Route "/api/offers/[id]/landings" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:45:13:     at POST (src/app/api/offers/[id]/landings/route.ts:33:27)
2025-09-22T18:45:13:   31 |     // Проверяем, что оффер существует
2025-09-22T18:45:13:   32 |     const offer = await prisma.offer.findUnique({
2025-09-22T18:45:13: > 33 |       where: { id: params.id }
2025-09-22T18:45:13:      |                           ^
2025-09-22T18:45:13:   34 |     })
2025-09-22T18:45:13:   35 |     
2025-09-22T18:45:13:   36 |     if (!offer) {
2025-09-22T18:45:13: Error: Route "/api/offers/[id]/landings" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:45:13:     at POST (src/app/api/offers/[id]/landings/route.ts:44:27)
2025-09-22T18:45:13:   42 |       const existingLanding = await prisma.landing.findFirst({
2025-09-22T18:45:13:   43 |         where: {
2025-09-22T18:45:13: > 44 |           offerId: params.id,
2025-09-22T18:45:13:      |                           ^
2025-09-22T18:45:13:   45 |           type: data.type,
2025-09-22T18:45:13:   46 |           extId: data.extId,
2025-09-22T18:45:13:   47 |         }
2025-09-22T18:45:14: Error: Route "/api/offers/[id]/landings" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:45:14:     at POST (src/app/api/offers/[id]/landings/route.ts:61:25)
2025-09-22T18:45:14:   59 |     const maxOrder = await prisma.landing.findFirst({
2025-09-22T18:45:14:   60 |       where: {
2025-09-22T18:45:14: > 61 |         offerId: params.id,
2025-09-22T18:45:14:      |                         ^
2025-09-22T18:45:14:   62 |         type: data.type,
2025-09-22T18:45:14:   63 |       },
2025-09-22T18:45:14:   64 |       select: { order: true },
2025-09-22T18:45:14: Error: Route "/api/offers/[id]/landings" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:45:14:     at POST (src/app/api/offers/[id]/landings/route.ts:71:25)
2025-09-22T18:45:14:   69 |       data: {
2025-09-22T18:45:14:   70 |         ...data,
2025-09-22T18:45:14: > 71 |         offerId: params.id,
2025-09-22T18:45:14:      |                         ^
2025-09-22T18:45:14:   72 |         order: (maxOrder?.order || 0) + 10,
2025-09-22T18:45:14:   73 |       },
2025-09-22T18:45:14:   74 |       include: {
2025-09-22T18:45:15: Error: Route "/api/offers/[id]/landings" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:45:15:     at POST (src/app/api/offers/[id]/landings/route.ts:33:27)
2025-09-22T18:45:15:   31 |     // Проверяем, что оффер существует
2025-09-22T18:45:15:   32 |     const offer = await prisma.offer.findUnique({
2025-09-22T18:45:15: > 33 |       where: { id: params.id }
2025-09-22T18:45:15:      |                           ^
2025-09-22T18:45:15:   34 |     })
2025-09-22T18:45:15:   35 |     
2025-09-22T18:45:15:   36 |     if (!offer) {
2025-09-22T18:45:15: Error: Route "/api/offers/[id]/landings" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:45:15:     at POST (src/app/api/offers/[id]/landings/route.ts:44:27)
2025-09-22T18:45:15:   42 |       const existingLanding = await prisma.landing.findFirst({
2025-09-22T18:45:15:   43 |         where: {
2025-09-22T18:45:15: > 44 |           offerId: params.id,
2025-09-22T18:45:15:      |                           ^
2025-09-22T18:45:15:   45 |           type: data.type,
2025-09-22T18:45:15:   46 |           extId: data.extId,
2025-09-22T18:45:15:   47 |         }
2025-09-22T18:45:15: Error: Route "/api/offers/[id]/landings" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:45:15:     at POST (src/app/api/offers/[id]/landings/route.ts:61:25)
2025-09-22T18:45:15:   59 |     const maxOrder = await prisma.landing.findFirst({
2025-09-22T18:45:15:   60 |       where: {
2025-09-22T18:45:15: > 61 |         offerId: params.id,
2025-09-22T18:45:15:      |                         ^
2025-09-22T18:45:15:   62 |         type: data.type,
2025-09-22T18:45:15:   63 |       },
2025-09-22T18:45:15:   64 |       select: { order: true },
2025-09-22T18:45:15: Error: Route "/api/offers/[id]/landings" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:45:15:     at POST (src/app/api/offers/[id]/landings/route.ts:71:25)
2025-09-22T18:45:15:   69 |       data: {
2025-09-22T18:45:15:   70 |         ...data,
2025-09-22T18:45:15: > 71 |         offerId: params.id,
2025-09-22T18:45:15:      |                         ^
2025-09-22T18:45:15:   72 |         order: (maxOrder?.order || 0) + 10,
2025-09-22T18:45:15:   73 |       },
2025-09-22T18:45:15:   74 |       include: {
2025-09-22T18:45:16: Error: Route "/api/offers/[id]/landings" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:45:16:     at POST (src/app/api/offers/[id]/landings/route.ts:33:27)
2025-09-22T18:45:16:   31 |     // Проверяем, что оффер существует
2025-09-22T18:45:16:   32 |     const offer = await prisma.offer.findUnique({
2025-09-22T18:45:16: > 33 |       where: { id: params.id }
2025-09-22T18:45:16:      |                           ^
2025-09-22T18:45:16:   34 |     })
2025-09-22T18:45:16:   35 |     
2025-09-22T18:45:16:   36 |     if (!offer) {
2025-09-22T18:45:16: Error: Route "/api/offers/[id]/landings" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:45:16:     at POST (src/app/api/offers/[id]/landings/route.ts:44:27)
2025-09-22T18:45:16:   42 |       const existingLanding = await prisma.landing.findFirst({
2025-09-22T18:45:16:   43 |         where: {
2025-09-22T18:45:16: > 44 |           offerId: params.id,
2025-09-22T18:45:16:      |                           ^
2025-09-22T18:45:16:   45 |           type: data.type,
2025-09-22T18:45:16:   46 |           extId: data.extId,
2025-09-22T18:45:16:   47 |         }
2025-09-22T18:45:16: Error: Route "/api/offers/[id]/landings" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:45:16:     at POST (src/app/api/offers/[id]/landings/route.ts:61:25)
2025-09-22T18:45:16:   59 |     const maxOrder = await prisma.landing.findFirst({
2025-09-22T18:45:16:   60 |       where: {
2025-09-22T18:45:16: > 61 |         offerId: params.id,
2025-09-22T18:45:16:      |                         ^
2025-09-22T18:45:16:   62 |         type: data.type,
2025-09-22T18:45:16:   63 |       },
2025-09-22T18:45:16:   64 |       select: { order: true },
2025-09-22T18:45:16: Error: Route "/api/offers/[id]/landings" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:45:16:     at POST (src/app/api/offers/[id]/landings/route.ts:71:25)
2025-09-22T18:45:16:   69 |       data: {
2025-09-22T18:45:16:   70 |         ...data,
2025-09-22T18:45:16: > 71 |         offerId: params.id,
2025-09-22T18:45:16:      |                         ^
2025-09-22T18:45:16:   72 |         order: (maxOrder?.order || 0) + 10,
2025-09-22T18:45:16:   73 |       },
2025-09-22T18:45:16:   74 |       include: {
2025-09-22T18:45:32: Error: Route "/api/offers/[id]/image" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:45:32:     at POST (src/app/api/offers/[id]/image/route.ts:30:27)
2025-09-22T18:45:32:   28 |     // Проверяем, что оффер существует
2025-09-22T18:45:32:   29 |     const offer = await prisma.offer.findUnique({
2025-09-22T18:45:32: > 30 |       where: { id: params.id }
2025-09-22T18:45:32:      |                           ^
2025-09-22T18:45:32:   31 |     })
2025-09-22T18:45:32:   32 |     
2025-09-22T18:45:32:   33 |     if (!offer) {
2025-09-22T18:45:32: Error: Route "/api/offers/[id]/image" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:45:32:     at POST (src/app/api/offers/[id]/image/route.ts:65:32)
2025-09-22T18:45:32:   63 |     // Генерируем уникальное имя файла
2025-09-22T18:45:32:   64 |     const extension = path.extname(file.name)
2025-09-22T18:45:32: > 65 |     const filename = `${params.id}-${Date.now()}${extension}`
2025-09-22T18:45:32:      |                                ^
2025-09-22T18:45:32:   66 |     const filepath = path.join(uploadsDir, filename)
2025-09-22T18:45:32:   67 |
2025-09-22T18:45:32:   68 |     // Сохраняем файл
2025-09-22T18:45:32: Error: Route "/api/offers/[id]/image" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:45:32:     at POST (src/app/api/offers/[id]/image/route.ts:81:27)
2025-09-22T18:45:32:   79 |     // Обновляем оффер с новым URL изображения
2025-09-22T18:45:32:   80 |     const updatedOffer = await prisma.offer.update({
2025-09-22T18:45:32: > 81 |       where: { id: params.id },
2025-09-22T18:45:32:      |                           ^
2025-09-22T18:45:32:   82 |       data: { imageUrl },
2025-09-22T18:45:32:   83 |       include: { landings: true }
2025-09-22T18:45:32:   84 |     })
2025-09-22T18:45:33: Error: Route "/api/offers/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:45:33:     at PATCH (src/app/api/offers/[id]/route.ts:33:27)
2025-09-22T18:45:33:   31 |     // Получаем текущий оффер для аудита
2025-09-22T18:45:33:   32 |     const currentOffer = await prisma.offer.findUnique({
2025-09-22T18:45:33: > 33 |       where: { id: params.id },
2025-09-22T18:45:33:      |                           ^
2025-09-22T18:45:33:   34 |       include: { landings: true }
2025-09-22T18:45:33:   35 |     })
2025-09-22T18:45:33:   36 |     
2025-09-22T18:45:33: Error: Route "/api/offers/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:45:33:     at PATCH (src/app/api/offers/[id]/route.ts:42:27)
2025-09-22T18:45:33:   40 |     
2025-09-22T18:45:33:   41 |     const updatedOffer = await prisma.offer.update({
2025-09-22T18:45:33: > 42 |       where: { id: params.id },
2025-09-22T18:45:33:      |                           ^
2025-09-22T18:45:33:   43 |       data,
2025-09-22T18:45:33:   44 |       include: { landings: true }
2025-09-22T18:45:33:   45 |     })
2025-09-22T18:45:33: Error: Route "/api/offers/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:45:33:     at PATCH (src/app/api/offers/[id]/route.ts:52:24)
2025-09-22T18:45:33:   50 |       action: 'update',
2025-09-22T18:45:33:   51 |       entity: 'offer',
2025-09-22T18:45:33: > 52 |       entityId: params.id,
2025-09-22T18:45:33:      |                        ^
2025-09-22T18:45:33:   53 |       before: currentOffer,
2025-09-22T18:45:33:   54 |       after: updatedOffer,
2025-09-22T18:45:33:   55 |     })
2025-09-22T18:45:57: Error: Route "/api/offers/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:45:57:     at PATCH (src/app/api/offers/[id]/route.ts:33:27)
2025-09-22T18:45:57:   31 |     // Получаем текущий оффер для аудита
2025-09-22T18:45:57:   32 |     const currentOffer = await prisma.offer.findUnique({
2025-09-22T18:45:57: > 33 |       where: { id: params.id },
2025-09-22T18:45:57:      |                           ^
2025-09-22T18:45:57:   34 |       include: { landings: true }
2025-09-22T18:45:57:   35 |     })
2025-09-22T18:45:57:   36 |     
2025-09-22T18:45:57: Error: Route "/api/offers/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:45:57:     at PATCH (src/app/api/offers/[id]/route.ts:42:27)
2025-09-22T18:45:57:   40 |     
2025-09-22T18:45:57:   41 |     const updatedOffer = await prisma.offer.update({
2025-09-22T18:45:57: > 42 |       where: { id: params.id },
2025-09-22T18:45:57:      |                           ^
2025-09-22T18:45:57:   43 |       data,
2025-09-22T18:45:57:   44 |       include: { landings: true }
2025-09-22T18:45:57:   45 |     })
2025-09-22T18:45:57: Error: Route "/api/offers/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:45:57:     at PATCH (src/app/api/offers/[id]/route.ts:52:24)
2025-09-22T18:45:57:   50 |       action: 'update',
2025-09-22T18:45:57:   51 |       entity: 'offer',
2025-09-22T18:45:57: > 52 |       entityId: params.id,
2025-09-22T18:45:57:      |                        ^
2025-09-22T18:45:57:   53 |       before: currentOffer,
2025-09-22T18:45:57:   54 |       after: updatedOffer,
2025-09-22T18:45:57:   55 |     })
2025-09-22T18:47:56: Error: Route "/api/offers/[id]/landings" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:47:56:     at POST (src/app/api/offers/[id]/landings/route.ts:33:27)
2025-09-22T18:47:56:   31 |     // Проверяем, что оффер существует
2025-09-22T18:47:56:   32 |     const offer = await prisma.offer.findUnique({
2025-09-22T18:47:56: > 33 |       where: { id: params.id }
2025-09-22T18:47:56:      |                           ^
2025-09-22T18:47:56:   34 |     })
2025-09-22T18:47:56:   35 |     
2025-09-22T18:47:56:   36 |     if (!offer) {
2025-09-22T18:47:57: Error: Route "/api/offers/[id]/landings" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:47:57:     at POST (src/app/api/offers/[id]/landings/route.ts:44:27)
2025-09-22T18:47:57:   42 |       const existingLanding = await prisma.landing.findFirst({
2025-09-22T18:47:57:   43 |         where: {
2025-09-22T18:47:57: > 44 |           offerId: params.id,
2025-09-22T18:47:57:      |                           ^
2025-09-22T18:47:57:   45 |           type: data.type,
2025-09-22T18:47:57:   46 |           extId: data.extId,
2025-09-22T18:47:57:   47 |         }
2025-09-22T18:47:57: Error: Route "/api/offers/[id]/landings" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:47:57:     at POST (src/app/api/offers/[id]/landings/route.ts:61:25)
2025-09-22T18:47:57:   59 |     const maxOrder = await prisma.landing.findFirst({
2025-09-22T18:47:57:   60 |       where: {
2025-09-22T18:47:57: > 61 |         offerId: params.id,
2025-09-22T18:47:57:      |                         ^
2025-09-22T18:47:57:   62 |         type: data.type,
2025-09-22T18:47:57:   63 |       },
2025-09-22T18:47:57:   64 |       select: { order: true },
2025-09-22T18:47:57: Error: Route "/api/offers/[id]/landings" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:47:57:     at POST (src/app/api/offers/[id]/landings/route.ts:71:25)
2025-09-22T18:47:57:   69 |       data: {
2025-09-22T18:47:57:   70 |         ...data,
2025-09-22T18:47:57: > 71 |         offerId: params.id,
2025-09-22T18:47:57:      |                         ^
2025-09-22T18:47:57:   72 |         order: (maxOrder?.order || 0) + 10,
2025-09-22T18:47:57:   73 |       },
2025-09-22T18:47:57:   74 |       include: {
2025-09-22T18:47:57: Error: Route "/api/offers/[id]/landings" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:47:57:     at POST (src/app/api/offers/[id]/landings/route.ts:33:27)
2025-09-22T18:47:57:   31 |     // Проверяем, что оффер существует
2025-09-22T18:47:57:   32 |     const offer = await prisma.offer.findUnique({
2025-09-22T18:47:57: > 33 |       where: { id: params.id }
2025-09-22T18:47:57:      |                           ^
2025-09-22T18:47:57:   34 |     })
2025-09-22T18:47:57:   35 |     
2025-09-22T18:47:57:   36 |     if (!offer) {
2025-09-22T18:47:58: Error: Route "/api/offers/[id]/landings" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:47:58:     at POST (src/app/api/offers/[id]/landings/route.ts:44:27)
2025-09-22T18:47:58:   42 |       const existingLanding = await prisma.landing.findFirst({
2025-09-22T18:47:58:   43 |         where: {
2025-09-22T18:47:58: > 44 |           offerId: params.id,
2025-09-22T18:47:58:      |                           ^
2025-09-22T18:47:58:   45 |           type: data.type,
2025-09-22T18:47:58:   46 |           extId: data.extId,
2025-09-22T18:47:58:   47 |         }
2025-09-22T18:47:58: Error: Route "/api/offers/[id]/landings" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:47:58:     at POST (src/app/api/offers/[id]/landings/route.ts:61:25)
2025-09-22T18:47:58:   59 |     const maxOrder = await prisma.landing.findFirst({
2025-09-22T18:47:58:   60 |       where: {
2025-09-22T18:47:58: > 61 |         offerId: params.id,
2025-09-22T18:47:58:      |                         ^
2025-09-22T18:47:58:   62 |         type: data.type,
2025-09-22T18:47:58:   63 |       },
2025-09-22T18:47:58:   64 |       select: { order: true },
2025-09-22T18:47:58: Error: Route "/api/offers/[id]/landings" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:47:58:     at POST (src/app/api/offers/[id]/landings/route.ts:71:25)
2025-09-22T18:47:58:   69 |       data: {
2025-09-22T18:47:58:   70 |         ...data,
2025-09-22T18:47:58: > 71 |         offerId: params.id,
2025-09-22T18:47:58:      |                         ^
2025-09-22T18:47:58:   72 |         order: (maxOrder?.order || 0) + 10,
2025-09-22T18:47:58:   73 |       },
2025-09-22T18:47:58:   74 |       include: {
2025-09-22T18:47:58: Error: Route "/api/offers/[id]/landings" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:47:58:     at POST (src/app/api/offers/[id]/landings/route.ts:33:27)
2025-09-22T18:47:58:   31 |     // Проверяем, что оффер существует
2025-09-22T18:47:58:   32 |     const offer = await prisma.offer.findUnique({
2025-09-22T18:47:58: > 33 |       where: { id: params.id }
2025-09-22T18:47:58:      |                           ^
2025-09-22T18:47:58:   34 |     })
2025-09-22T18:47:58:   35 |     
2025-09-22T18:47:58:   36 |     if (!offer) {
2025-09-22T18:47:58: Error: Route "/api/offers/[id]/landings" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:47:58:     at POST (src/app/api/offers/[id]/landings/route.ts:44:27)
2025-09-22T18:47:58:   42 |       const existingLanding = await prisma.landing.findFirst({
2025-09-22T18:47:58:   43 |         where: {
2025-09-22T18:47:58: > 44 |           offerId: params.id,
2025-09-22T18:47:58:      |                           ^
2025-09-22T18:47:58:   45 |           type: data.type,
2025-09-22T18:47:58:   46 |           extId: data.extId,
2025-09-22T18:47:58:   47 |         }
2025-09-22T18:47:59: Error: Route "/api/offers/[id]/landings" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:47:59:     at POST (src/app/api/offers/[id]/landings/route.ts:61:25)
2025-09-22T18:47:59:   59 |     const maxOrder = await prisma.landing.findFirst({
2025-09-22T18:47:59:   60 |       where: {
2025-09-22T18:47:59: > 61 |         offerId: params.id,
2025-09-22T18:47:59:      |                         ^
2025-09-22T18:47:59:   62 |         type: data.type,
2025-09-22T18:47:59:   63 |       },
2025-09-22T18:47:59:   64 |       select: { order: true },
2025-09-22T18:47:59: Error: Route "/api/offers/[id]/landings" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:47:59:     at POST (src/app/api/offers/[id]/landings/route.ts:71:25)
2025-09-22T18:47:59:   69 |       data: {
2025-09-22T18:47:59:   70 |         ...data,
2025-09-22T18:47:59: > 71 |         offerId: params.id,
2025-09-22T18:47:59:      |                         ^
2025-09-22T18:47:59:   72 |         order: (maxOrder?.order || 0) + 10,
2025-09-22T18:47:59:   73 |       },
2025-09-22T18:47:59:   74 |       include: {
2025-09-22T18:48:22: Error: Route "/api/offers/[id]/image" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:48:22:     at POST (src/app/api/offers/[id]/image/route.ts:30:27)
2025-09-22T18:48:22:   28 |     // Проверяем, что оффер существует
2025-09-22T18:48:22:   29 |     const offer = await prisma.offer.findUnique({
2025-09-22T18:48:22: > 30 |       where: { id: params.id }
2025-09-22T18:48:22:      |                           ^
2025-09-22T18:48:22:   31 |     })
2025-09-22T18:48:22:   32 |     
2025-09-22T18:48:22:   33 |     if (!offer) {
2025-09-22T18:48:22: Error: Route "/api/offers/[id]/image" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:48:22:     at POST (src/app/api/offers/[id]/image/route.ts:65:32)
2025-09-22T18:48:22:   63 |     // Генерируем уникальное имя файла
2025-09-22T18:48:22:   64 |     const extension = path.extname(file.name)
2025-09-22T18:48:22: > 65 |     const filename = `${params.id}-${Date.now()}${extension}`
2025-09-22T18:48:22:      |                                ^
2025-09-22T18:48:22:   66 |     const filepath = path.join(uploadsDir, filename)
2025-09-22T18:48:22:   67 |
2025-09-22T18:48:22:   68 |     // Сохраняем файл
2025-09-22T18:48:23: Error: Route "/api/offers/[id]/image" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:48:23:     at POST (src/app/api/offers/[id]/image/route.ts:81:27)
2025-09-22T18:48:23:   79 |     // Обновляем оффер с новым URL изображения
2025-09-22T18:48:23:   80 |     const updatedOffer = await prisma.offer.update({
2025-09-22T18:48:23: > 81 |       where: { id: params.id },
2025-09-22T18:48:23:      |                           ^
2025-09-22T18:48:23:   82 |       data: { imageUrl },
2025-09-22T18:48:23:   83 |       include: { landings: true }
2025-09-22T18:48:23:   84 |     })
2025-09-22T18:48:23: Error: Route "/api/offers/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:48:23:     at PATCH (src/app/api/offers/[id]/route.ts:33:27)
2025-09-22T18:48:23:   31 |     // Получаем текущий оффер для аудита
2025-09-22T18:48:23:   32 |     const currentOffer = await prisma.offer.findUnique({
2025-09-22T18:48:23: > 33 |       where: { id: params.id },
2025-09-22T18:48:23:      |                           ^
2025-09-22T18:48:23:   34 |       include: { landings: true }
2025-09-22T18:48:23:   35 |     })
2025-09-22T18:48:23:   36 |     
2025-09-22T18:48:24: Error: Route "/api/offers/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:48:24:     at PATCH (src/app/api/offers/[id]/route.ts:42:27)
2025-09-22T18:48:24:   40 |     
2025-09-22T18:48:24:   41 |     const updatedOffer = await prisma.offer.update({
2025-09-22T18:48:24: > 42 |       where: { id: params.id },
2025-09-22T18:48:24:      |                           ^
2025-09-22T18:48:24:   43 |       data,
2025-09-22T18:48:24:   44 |       include: { landings: true }
2025-09-22T18:48:24:   45 |     })
2025-09-22T18:48:24: Error: Route "/api/offers/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:48:24:     at PATCH (src/app/api/offers/[id]/route.ts:52:24)
2025-09-22T18:48:24:   50 |       action: 'update',
2025-09-22T18:48:24:   51 |       entity: 'offer',
2025-09-22T18:48:24: > 52 |       entityId: params.id,
2025-09-22T18:48:24:      |                        ^
2025-09-22T18:48:24:   53 |       before: currentOffer,
2025-09-22T18:48:24:   54 |       after: updatedOffer,
2025-09-22T18:48:24:   55 |     })
2025-09-22T18:48:44: Error: Route "/api/offers/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:48:44:     at PATCH (src/app/api/offers/[id]/route.ts:33:27)
2025-09-22T18:48:44:   31 |     // Получаем текущий оффер для аудита
2025-09-22T18:48:44:   32 |     const currentOffer = await prisma.offer.findUnique({
2025-09-22T18:48:44: > 33 |       where: { id: params.id },
2025-09-22T18:48:44:      |                           ^
2025-09-22T18:48:44:   34 |       include: { landings: true }
2025-09-22T18:48:44:   35 |     })
2025-09-22T18:48:44:   36 |     
2025-09-22T18:48:44: Error: Route "/api/offers/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:48:44:     at PATCH (src/app/api/offers/[id]/route.ts:42:27)
2025-09-22T18:48:44:   40 |     
2025-09-22T18:48:44:   41 |     const updatedOffer = await prisma.offer.update({
2025-09-22T18:48:44: > 42 |       where: { id: params.id },
2025-09-22T18:48:44:      |                           ^
2025-09-22T18:48:44:   43 |       data,
2025-09-22T18:48:44:   44 |       include: { landings: true }
2025-09-22T18:48:44:   45 |     })
2025-09-22T18:48:44: Error: Route "/api/offers/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:48:44:     at PATCH (src/app/api/offers/[id]/route.ts:52:24)
2025-09-22T18:48:44:   50 |       action: 'update',
2025-09-22T18:48:44:   51 |       entity: 'offer',
2025-09-22T18:48:44: > 52 |       entityId: params.id,
2025-09-22T18:48:44:      |                        ^
2025-09-22T18:48:44:   53 |       before: currentOffer,
2025-09-22T18:48:44:   54 |       after: updatedOffer,
2025-09-22T18:48:44:   55 |     })
2025-09-22T18:48:48: Error: Route "/api/offers/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:48:48:     at PATCH (src/app/api/offers/[id]/route.ts:33:27)
2025-09-22T18:48:48:   31 |     // Получаем текущий оффер для аудита
2025-09-22T18:48:48:   32 |     const currentOffer = await prisma.offer.findUnique({
2025-09-22T18:48:48: > 33 |       where: { id: params.id },
2025-09-22T18:48:48:      |                           ^
2025-09-22T18:48:48:   34 |       include: { landings: true }
2025-09-22T18:48:48:   35 |     })
2025-09-22T18:48:48:   36 |     
2025-09-22T18:48:49: Error: Route "/api/offers/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:48:49:     at PATCH (src/app/api/offers/[id]/route.ts:42:27)
2025-09-22T18:48:49:   40 |     
2025-09-22T18:48:49:   41 |     const updatedOffer = await prisma.offer.update({
2025-09-22T18:48:49: > 42 |       where: { id: params.id },
2025-09-22T18:48:49:      |                           ^
2025-09-22T18:48:49:   43 |       data,
2025-09-22T18:48:49:   44 |       include: { landings: true }
2025-09-22T18:48:49:   45 |     })
2025-09-22T18:48:49: Error: Route "/api/offers/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:48:49:     at PATCH (src/app/api/offers/[id]/route.ts:52:24)
2025-09-22T18:48:49:   50 |       action: 'update',
2025-09-22T18:48:49:   51 |       entity: 'offer',
2025-09-22T18:48:49: > 52 |       entityId: params.id,
2025-09-22T18:48:49:      |                        ^
2025-09-22T18:48:49:   53 |       before: currentOffer,
2025-09-22T18:48:49:   54 |       after: updatedOffer,
2025-09-22T18:48:49:   55 |     })
2025-09-22T18:50:08: Error: Route "/api/offers/[id]/landings" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:50:08:     at POST (src/app/api/offers/[id]/landings/route.ts:33:27)
2025-09-22T18:50:08:   31 |     // Проверяем, что оффер существует
2025-09-22T18:50:08:   32 |     const offer = await prisma.offer.findUnique({
2025-09-22T18:50:08: > 33 |       where: { id: params.id }
2025-09-22T18:50:08:      |                           ^
2025-09-22T18:50:08:   34 |     })
2025-09-22T18:50:08:   35 |     
2025-09-22T18:50:08:   36 |     if (!offer) {
2025-09-22T18:50:08: Error: Route "/api/offers/[id]/landings" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:50:08:     at POST (src/app/api/offers/[id]/landings/route.ts:44:27)
2025-09-22T18:50:08:   42 |       const existingLanding = await prisma.landing.findFirst({
2025-09-22T18:50:08:   43 |         where: {
2025-09-22T18:50:08: > 44 |           offerId: params.id,
2025-09-22T18:50:08:      |                           ^
2025-09-22T18:50:08:   45 |           type: data.type,
2025-09-22T18:50:08:   46 |           extId: data.extId,
2025-09-22T18:50:08:   47 |         }
2025-09-22T18:50:08: Error: Route "/api/offers/[id]/landings" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:50:08:     at POST (src/app/api/offers/[id]/landings/route.ts:61:25)
2025-09-22T18:50:08:   59 |     const maxOrder = await prisma.landing.findFirst({
2025-09-22T18:50:08:   60 |       where: {
2025-09-22T18:50:08: > 61 |         offerId: params.id,
2025-09-22T18:50:08:      |                         ^
2025-09-22T18:50:08:   62 |         type: data.type,
2025-09-22T18:50:08:   63 |       },
2025-09-22T18:50:08:   64 |       select: { order: true },
2025-09-22T18:50:09: Error: Route "/api/offers/[id]/landings" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:50:09:     at POST (src/app/api/offers/[id]/landings/route.ts:71:25)
2025-09-22T18:50:09:   69 |       data: {
2025-09-22T18:50:09:   70 |         ...data,
2025-09-22T18:50:09: > 71 |         offerId: params.id,
2025-09-22T18:50:09:      |                         ^
2025-09-22T18:50:09:   72 |         order: (maxOrder?.order || 0) + 10,
2025-09-22T18:50:09:   73 |       },
2025-09-22T18:50:09:   74 |       include: {
2025-09-22T18:50:09: Error: Route "/api/offers/[id]/landings" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:50:09:     at POST (src/app/api/offers/[id]/landings/route.ts:33:27)
2025-09-22T18:50:09:   31 |     // Проверяем, что оффер существует
2025-09-22T18:50:09:   32 |     const offer = await prisma.offer.findUnique({
2025-09-22T18:50:09: > 33 |       where: { id: params.id }
2025-09-22T18:50:09:      |                           ^
2025-09-22T18:50:09:   34 |     })
2025-09-22T18:50:09:   35 |     
2025-09-22T18:50:09:   36 |     if (!offer) {
2025-09-22T18:50:10: Error: Route "/api/offers/[id]/landings" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:50:10:     at POST (src/app/api/offers/[id]/landings/route.ts:44:27)
2025-09-22T18:50:10:   42 |       const existingLanding = await prisma.landing.findFirst({
2025-09-22T18:50:10:   43 |         where: {
2025-09-22T18:50:10: > 44 |           offerId: params.id,
2025-09-22T18:50:10:      |                           ^
2025-09-22T18:50:10:   45 |           type: data.type,
2025-09-22T18:50:10:   46 |           extId: data.extId,
2025-09-22T18:50:10:   47 |         }
2025-09-22T18:50:10: Error: Route "/api/offers/[id]/landings" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:50:10:     at POST (src/app/api/offers/[id]/landings/route.ts:61:25)
2025-09-22T18:50:10:   59 |     const maxOrder = await prisma.landing.findFirst({
2025-09-22T18:50:10:   60 |       where: {
2025-09-22T18:50:10: > 61 |         offerId: params.id,
2025-09-22T18:50:10:      |                         ^
2025-09-22T18:50:10:   62 |         type: data.type,
2025-09-22T18:50:10:   63 |       },
2025-09-22T18:50:10:   64 |       select: { order: true },
2025-09-22T18:50:10: Error: Route "/api/offers/[id]/landings" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:50:10:     at POST (src/app/api/offers/[id]/landings/route.ts:71:25)
2025-09-22T18:50:10:   69 |       data: {
2025-09-22T18:50:10:   70 |         ...data,
2025-09-22T18:50:10: > 71 |         offerId: params.id,
2025-09-22T18:50:10:      |                         ^
2025-09-22T18:50:10:   72 |         order: (maxOrder?.order || 0) + 10,
2025-09-22T18:50:10:   73 |       },
2025-09-22T18:50:10:   74 |       include: {
2025-09-22T18:50:10: Error: Route "/api/offers/[id]/landings" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:50:10:     at POST (src/app/api/offers/[id]/landings/route.ts:33:27)
2025-09-22T18:50:10:   31 |     // Проверяем, что оффер существует
2025-09-22T18:50:10:   32 |     const offer = await prisma.offer.findUnique({
2025-09-22T18:50:10: > 33 |       where: { id: params.id }
2025-09-22T18:50:10:      |                           ^
2025-09-22T18:50:10:   34 |     })
2025-09-22T18:50:10:   35 |     
2025-09-22T18:50:10:   36 |     if (!offer) {
2025-09-22T18:50:10: Error: Route "/api/offers/[id]/landings" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:50:10:     at POST (src/app/api/offers/[id]/landings/route.ts:44:27)
2025-09-22T18:50:10:   42 |       const existingLanding = await prisma.landing.findFirst({
2025-09-22T18:50:10:   43 |         where: {
2025-09-22T18:50:10: > 44 |           offerId: params.id,
2025-09-22T18:50:10:      |                           ^
2025-09-22T18:50:10:   45 |           type: data.type,
2025-09-22T18:50:10:   46 |           extId: data.extId,
2025-09-22T18:50:10:   47 |         }
2025-09-22T18:50:11: Error: Route "/api/offers/[id]/landings" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:50:11:     at POST (src/app/api/offers/[id]/landings/route.ts:61:25)
2025-09-22T18:50:11:   59 |     const maxOrder = await prisma.landing.findFirst({
2025-09-22T18:50:11:   60 |       where: {
2025-09-22T18:50:11: > 61 |         offerId: params.id,
2025-09-22T18:50:11:      |                         ^
2025-09-22T18:50:11:   62 |         type: data.type,
2025-09-22T18:50:11:   63 |       },
2025-09-22T18:50:11:   64 |       select: { order: true },
2025-09-22T18:50:11: Error: Route "/api/offers/[id]/landings" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:50:11:     at POST (src/app/api/offers/[id]/landings/route.ts:71:25)
2025-09-22T18:50:11:   69 |       data: {
2025-09-22T18:50:11:   70 |         ...data,
2025-09-22T18:50:11: > 71 |         offerId: params.id,
2025-09-22T18:50:11:      |                         ^
2025-09-22T18:50:11:   72 |         order: (maxOrder?.order || 0) + 10,
2025-09-22T18:50:11:   73 |       },
2025-09-22T18:50:11:   74 |       include: {
2025-09-22T18:50:25: Error: Route "/api/offers/[id]/image" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:50:25:     at POST (src/app/api/offers/[id]/image/route.ts:30:27)
2025-09-22T18:50:25:   28 |     // Проверяем, что оффер существует
2025-09-22T18:50:25:   29 |     const offer = await prisma.offer.findUnique({
2025-09-22T18:50:25: > 30 |       where: { id: params.id }
2025-09-22T18:50:25:      |                           ^
2025-09-22T18:50:25:   31 |     })
2025-09-22T18:50:25:   32 |     
2025-09-22T18:50:25:   33 |     if (!offer) {
2025-09-22T18:50:25: Error: Route "/api/offers/[id]/image" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:50:25:     at POST (src/app/api/offers/[id]/image/route.ts:65:32)
2025-09-22T18:50:25:   63 |     // Генерируем уникальное имя файла
2025-09-22T18:50:25:   64 |     const extension = path.extname(file.name)
2025-09-22T18:50:25: > 65 |     const filename = `${params.id}-${Date.now()}${extension}`
2025-09-22T18:50:25:      |                                ^
2025-09-22T18:50:25:   66 |     const filepath = path.join(uploadsDir, filename)
2025-09-22T18:50:25:   67 |
2025-09-22T18:50:25:   68 |     // Сохраняем файл
2025-09-22T18:50:25: Error: Route "/api/offers/[id]/image" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:50:25:     at POST (src/app/api/offers/[id]/image/route.ts:81:27)
2025-09-22T18:50:25:   79 |     // Обновляем оффер с новым URL изображения
2025-09-22T18:50:25:   80 |     const updatedOffer = await prisma.offer.update({
2025-09-22T18:50:25: > 81 |       where: { id: params.id },
2025-09-22T18:50:25:      |                           ^
2025-09-22T18:50:25:   82 |       data: { imageUrl },
2025-09-22T18:50:25:   83 |       include: { landings: true }
2025-09-22T18:50:25:   84 |     })
2025-09-22T18:50:26: Error: Route "/api/offers/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:50:26:     at PATCH (src/app/api/offers/[id]/route.ts:33:27)
2025-09-22T18:50:26:   31 |     // Получаем текущий оффер для аудита
2025-09-22T18:50:26:   32 |     const currentOffer = await prisma.offer.findUnique({
2025-09-22T18:50:26: > 33 |       where: { id: params.id },
2025-09-22T18:50:26:      |                           ^
2025-09-22T18:50:26:   34 |       include: { landings: true }
2025-09-22T18:50:26:   35 |     })
2025-09-22T18:50:26:   36 |     
2025-09-22T18:50:26: Error: Route "/api/offers/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:50:26:     at PATCH (src/app/api/offers/[id]/route.ts:42:27)
2025-09-22T18:50:26:   40 |     
2025-09-22T18:50:26:   41 |     const updatedOffer = await prisma.offer.update({
2025-09-22T18:50:26: > 42 |       where: { id: params.id },
2025-09-22T18:50:26:      |                           ^
2025-09-22T18:50:26:   43 |       data,
2025-09-22T18:50:26:   44 |       include: { landings: true }
2025-09-22T18:50:26:   45 |     })
2025-09-22T18:50:26: Error: Route "/api/offers/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:50:26:     at PATCH (src/app/api/offers/[id]/route.ts:52:24)
2025-09-22T18:50:26:   50 |       action: 'update',
2025-09-22T18:50:26:   51 |       entity: 'offer',
2025-09-22T18:50:26: > 52 |       entityId: params.id,
2025-09-22T18:50:26:      |                        ^
2025-09-22T18:50:26:   53 |       before: currentOffer,
2025-09-22T18:50:26:   54 |       after: updatedOffer,
2025-09-22T18:50:26:   55 |     })
2025-09-22T18:50:35: Error: Route "/api/offers/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:50:35:     at PATCH (src/app/api/offers/[id]/route.ts:33:27)
2025-09-22T18:50:35:   31 |     // Получаем текущий оффер для аудита
2025-09-22T18:50:35:   32 |     const currentOffer = await prisma.offer.findUnique({
2025-09-22T18:50:35: > 33 |       where: { id: params.id },
2025-09-22T18:50:35:      |                           ^
2025-09-22T18:50:35:   34 |       include: { landings: true }
2025-09-22T18:50:35:   35 |     })
2025-09-22T18:50:35:   36 |     
2025-09-22T18:50:35: Error: Route "/api/offers/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:50:35:     at PATCH (src/app/api/offers/[id]/route.ts:42:27)
2025-09-22T18:50:35:   40 |     
2025-09-22T18:50:35:   41 |     const updatedOffer = await prisma.offer.update({
2025-09-22T18:50:35: > 42 |       where: { id: params.id },
2025-09-22T18:50:35:      |                           ^
2025-09-22T18:50:35:   43 |       data,
2025-09-22T18:50:35:   44 |       include: { landings: true }
2025-09-22T18:50:35:   45 |     })
2025-09-22T18:50:36: Error: Route "/api/offers/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:50:36:     at PATCH (src/app/api/offers/[id]/route.ts:52:24)
2025-09-22T18:50:36:   50 |       action: 'update',
2025-09-22T18:50:36:   51 |       entity: 'offer',
2025-09-22T18:50:36: > 52 |       entityId: params.id,
2025-09-22T18:50:36:      |                        ^
2025-09-22T18:50:36:   53 |       before: currentOffer,
2025-09-22T18:50:36:   54 |       after: updatedOffer,
2025-09-22T18:50:36:   55 |     })
2025-09-22T18:50:38: Error: Route "/api/offers/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:50:38:     at PATCH (src/app/api/offers/[id]/route.ts:33:27)
2025-09-22T18:50:38:   31 |     // Получаем текущий оффер для аудита
2025-09-22T18:50:38:   32 |     const currentOffer = await prisma.offer.findUnique({
2025-09-22T18:50:38: > 33 |       where: { id: params.id },
2025-09-22T18:50:38:      |                           ^
2025-09-22T18:50:38:   34 |       include: { landings: true }
2025-09-22T18:50:38:   35 |     })
2025-09-22T18:50:38:   36 |     
2025-09-22T18:50:39: Error: Route "/api/offers/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:50:39:     at PATCH (src/app/api/offers/[id]/route.ts:42:27)
2025-09-22T18:50:39:   40 |     
2025-09-22T18:50:39:   41 |     const updatedOffer = await prisma.offer.update({
2025-09-22T18:50:39: > 42 |       where: { id: params.id },
2025-09-22T18:50:39:      |                           ^
2025-09-22T18:50:39:   43 |       data,
2025-09-22T18:50:39:   44 |       include: { landings: true }
2025-09-22T18:50:39:   45 |     })
2025-09-22T18:50:39: Error: Route "/api/offers/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:50:39:     at PATCH (src/app/api/offers/[id]/route.ts:52:24)
2025-09-22T18:50:39:   50 |       action: 'update',
2025-09-22T18:50:39:   51 |       entity: 'offer',
2025-09-22T18:50:39: > 52 |       entityId: params.id,
2025-09-22T18:50:39:      |                        ^
2025-09-22T18:50:39:   53 |       before: currentOffer,
2025-09-22T18:50:39:   54 |       after: updatedOffer,
2025-09-22T18:50:39:   55 |     })
2025-09-22T18:50:41: Error: Route "/api/offers/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:50:41:     at PATCH (src/app/api/offers/[id]/route.ts:33:27)
2025-09-22T18:50:41:   31 |     // Получаем текущий оффер для аудита
2025-09-22T18:50:41:   32 |     const currentOffer = await prisma.offer.findUnique({
2025-09-22T18:50:41: > 33 |       where: { id: params.id },
2025-09-22T18:50:41:      |                           ^
2025-09-22T18:50:41:   34 |       include: { landings: true }
2025-09-22T18:50:41:   35 |     })
2025-09-22T18:50:41:   36 |     
2025-09-22T18:50:42: Error: Route "/api/offers/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:50:42:     at PATCH (src/app/api/offers/[id]/route.ts:42:27)
2025-09-22T18:50:42:   40 |     
2025-09-22T18:50:42:   41 |     const updatedOffer = await prisma.offer.update({
2025-09-22T18:50:42: > 42 |       where: { id: params.id },
2025-09-22T18:50:42:      |                           ^
2025-09-22T18:50:42:   43 |       data,
2025-09-22T18:50:42:   44 |       include: { landings: true }
2025-09-22T18:50:42:   45 |     })
2025-09-22T18:50:42: Error: Route "/api/offers/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:50:42:     at PATCH (src/app/api/offers/[id]/route.ts:52:24)
2025-09-22T18:50:42:   50 |       action: 'update',
2025-09-22T18:50:42:   51 |       entity: 'offer',
2025-09-22T18:50:42: > 52 |       entityId: params.id,
2025-09-22T18:50:42:      |                        ^
2025-09-22T18:50:42:   53 |       before: currentOffer,
2025-09-22T18:50:42:   54 |       after: updatedOffer,
2025-09-22T18:50:42:   55 |     })
2025-09-22T18:50:44: Error: Route "/api/offers/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:50:44:     at PATCH (src/app/api/offers/[id]/route.ts:33:27)
2025-09-22T18:50:44:   31 |     // Получаем текущий оффер для аудита
2025-09-22T18:50:44:   32 |     const currentOffer = await prisma.offer.findUnique({
2025-09-22T18:50:44: > 33 |       where: { id: params.id },
2025-09-22T18:50:44:      |                           ^
2025-09-22T18:50:44:   34 |       include: { landings: true }
2025-09-22T18:50:44:   35 |     })
2025-09-22T18:50:44:   36 |     
2025-09-22T18:50:44: Error: Route "/api/offers/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:50:44:     at PATCH (src/app/api/offers/[id]/route.ts:42:27)
2025-09-22T18:50:44:   40 |     
2025-09-22T18:50:44:   41 |     const updatedOffer = await prisma.offer.update({
2025-09-22T18:50:44: > 42 |       where: { id: params.id },
2025-09-22T18:50:44:      |                           ^
2025-09-22T18:50:44:   43 |       data,
2025-09-22T18:50:44:   44 |       include: { landings: true }
2025-09-22T18:50:44:   45 |     })
2025-09-22T18:50:44: Error: Route "/api/offers/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:50:44:     at PATCH (src/app/api/offers/[id]/route.ts:52:24)
2025-09-22T18:50:44:   50 |       action: 'update',
2025-09-22T18:50:44:   51 |       entity: 'offer',
2025-09-22T18:50:44: > 52 |       entityId: params.id,
2025-09-22T18:50:44:      |                        ^
2025-09-22T18:50:44:   53 |       before: currentOffer,
2025-09-22T18:50:44:   54 |       after: updatedOffer,
2025-09-22T18:50:44:   55 |     })
2025-09-22T18:51:02: Error: Route "/api/offers/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:51:02:     at PATCH (src/app/api/offers/[id]/route.ts:33:27)
2025-09-22T18:51:02:   31 |     // Получаем текущий оффер для аудита
2025-09-22T18:51:02:   32 |     const currentOffer = await prisma.offer.findUnique({
2025-09-22T18:51:02: > 33 |       where: { id: params.id },
2025-09-22T18:51:02:      |                           ^
2025-09-22T18:51:02:   34 |       include: { landings: true }
2025-09-22T18:51:02:   35 |     })
2025-09-22T18:51:02:   36 |     
2025-09-22T18:51:02: Error: Route "/api/offers/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:51:02:     at PATCH (src/app/api/offers/[id]/route.ts:42:27)
2025-09-22T18:51:02:   40 |     
2025-09-22T18:51:02:   41 |     const updatedOffer = await prisma.offer.update({
2025-09-22T18:51:02: > 42 |       where: { id: params.id },
2025-09-22T18:51:02:      |                           ^
2025-09-22T18:51:02:   43 |       data,
2025-09-22T18:51:02:   44 |       include: { landings: true }
2025-09-22T18:51:02:   45 |     })
2025-09-22T18:51:03: Error: Route "/api/offers/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:51:03:     at PATCH (src/app/api/offers/[id]/route.ts:52:24)
2025-09-22T18:51:03:   50 |       action: 'update',
2025-09-22T18:51:03:   51 |       entity: 'offer',
2025-09-22T18:51:03: > 52 |       entityId: params.id,
2025-09-22T18:51:03:      |                        ^
2025-09-22T18:51:03:   53 |       before: currentOffer,
2025-09-22T18:51:03:   54 |       after: updatedOffer,
2025-09-22T18:51:03:   55 |     })
2025-09-22T18:51:06: Error: Route "/api/offers/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:51:06:     at PATCH (src/app/api/offers/[id]/route.ts:33:27)
2025-09-22T18:51:06:   31 |     // Получаем текущий оффер для аудита
2025-09-22T18:51:06:   32 |     const currentOffer = await prisma.offer.findUnique({
2025-09-22T18:51:06: > 33 |       where: { id: params.id },
2025-09-22T18:51:06:      |                           ^
2025-09-22T18:51:06:   34 |       include: { landings: true }
2025-09-22T18:51:06:   35 |     })
2025-09-22T18:51:06:   36 |     
2025-09-22T18:51:07: Error: Route "/api/offers/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:51:07:     at PATCH (src/app/api/offers/[id]/route.ts:42:27)
2025-09-22T18:51:07:   40 |     
2025-09-22T18:51:07:   41 |     const updatedOffer = await prisma.offer.update({
2025-09-22T18:51:07: > 42 |       where: { id: params.id },
2025-09-22T18:51:07:      |                           ^
2025-09-22T18:51:07:   43 |       data,
2025-09-22T18:51:07:   44 |       include: { landings: true }
2025-09-22T18:51:07:   45 |     })
2025-09-22T18:51:07: Error: Route "/api/offers/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:51:07:     at PATCH (src/app/api/offers/[id]/route.ts:52:24)
2025-09-22T18:51:07:   50 |       action: 'update',
2025-09-22T18:51:07:   51 |       entity: 'offer',
2025-09-22T18:51:07: > 52 |       entityId: params.id,
2025-09-22T18:51:07:      |                        ^
2025-09-22T18:51:07:   53 |       before: currentOffer,
2025-09-22T18:51:07:   54 |       after: updatedOffer,
2025-09-22T18:51:07:   55 |     })
2025-09-22T18:52:45: Error: Route "/api/offers/[id]/landings" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:52:45:     at POST (src/app/api/offers/[id]/landings/route.ts:33:27)
2025-09-22T18:52:45:   31 |     // Проверяем, что оффер существует
2025-09-22T18:52:45:   32 |     const offer = await prisma.offer.findUnique({
2025-09-22T18:52:45: > 33 |       where: { id: params.id }
2025-09-22T18:52:45:      |                           ^
2025-09-22T18:52:45:   34 |     })
2025-09-22T18:52:45:   35 |     
2025-09-22T18:52:45:   36 |     if (!offer) {
2025-09-22T18:52:45: Error: Route "/api/offers/[id]/landings" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:52:45:     at POST (src/app/api/offers/[id]/landings/route.ts:44:27)
2025-09-22T18:52:45:   42 |       const existingLanding = await prisma.landing.findFirst({
2025-09-22T18:52:45:   43 |         where: {
2025-09-22T18:52:45: > 44 |           offerId: params.id,
2025-09-22T18:52:45:      |                           ^
2025-09-22T18:52:45:   45 |           type: data.type,
2025-09-22T18:52:45:   46 |           extId: data.extId,
2025-09-22T18:52:45:   47 |         }
2025-09-22T18:52:45: Error: Route "/api/offers/[id]/landings" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:52:45:     at POST (src/app/api/offers/[id]/landings/route.ts:61:25)
2025-09-22T18:52:45:   59 |     const maxOrder = await prisma.landing.findFirst({
2025-09-22T18:52:45:   60 |       where: {
2025-09-22T18:52:45: > 61 |         offerId: params.id,
2025-09-22T18:52:45:      |                         ^
2025-09-22T18:52:45:   62 |         type: data.type,
2025-09-22T18:52:45:   63 |       },
2025-09-22T18:52:45:   64 |       select: { order: true },
2025-09-22T18:52:46: Error: Route "/api/offers/[id]/landings" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:52:46:     at POST (src/app/api/offers/[id]/landings/route.ts:71:25)
2025-09-22T18:52:46:   69 |       data: {
2025-09-22T18:52:46:   70 |         ...data,
2025-09-22T18:52:46: > 71 |         offerId: params.id,
2025-09-22T18:52:46:      |                         ^
2025-09-22T18:52:46:   72 |         order: (maxOrder?.order || 0) + 10,
2025-09-22T18:52:46:   73 |       },
2025-09-22T18:52:46:   74 |       include: {
2025-09-22T18:52:46: Error: Route "/api/offers/[id]/landings" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:52:46:     at POST (src/app/api/offers/[id]/landings/route.ts:33:27)
2025-09-22T18:52:46:   31 |     // Проверяем, что оффер существует
2025-09-22T18:52:46:   32 |     const offer = await prisma.offer.findUnique({
2025-09-22T18:52:46: > 33 |       where: { id: params.id }
2025-09-22T18:52:46:      |                           ^
2025-09-22T18:52:46:   34 |     })
2025-09-22T18:52:46:   35 |     
2025-09-22T18:52:46:   36 |     if (!offer) {
2025-09-22T18:52:46: Error: Route "/api/offers/[id]/landings" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:52:46:     at POST (src/app/api/offers/[id]/landings/route.ts:44:27)
2025-09-22T18:52:46:   42 |       const existingLanding = await prisma.landing.findFirst({
2025-09-22T18:52:46:   43 |         where: {
2025-09-22T18:52:46: > 44 |           offerId: params.id,
2025-09-22T18:52:46:      |                           ^
2025-09-22T18:52:46:   45 |           type: data.type,
2025-09-22T18:52:46:   46 |           extId: data.extId,
2025-09-22T18:52:46:   47 |         }
2025-09-22T18:52:46: Error: Route "/api/offers/[id]/landings" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:52:46:     at POST (src/app/api/offers/[id]/landings/route.ts:61:25)
2025-09-22T18:52:46:   59 |     const maxOrder = await prisma.landing.findFirst({
2025-09-22T18:52:46:   60 |       where: {
2025-09-22T18:52:46: > 61 |         offerId: params.id,
2025-09-22T18:52:46:      |                         ^
2025-09-22T18:52:46:   62 |         type: data.type,
2025-09-22T18:52:46:   63 |       },
2025-09-22T18:52:46:   64 |       select: { order: true },
2025-09-22T18:52:46: Error: Route "/api/offers/[id]/landings" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:52:46:     at POST (src/app/api/offers/[id]/landings/route.ts:71:25)
2025-09-22T18:52:46:   69 |       data: {
2025-09-22T18:52:46:   70 |         ...data,
2025-09-22T18:52:46: > 71 |         offerId: params.id,
2025-09-22T18:52:46:      |                         ^
2025-09-22T18:52:46:   72 |         order: (maxOrder?.order || 0) + 10,
2025-09-22T18:52:46:   73 |       },
2025-09-22T18:52:46:   74 |       include: {
2025-09-22T18:52:47: Error: Route "/api/offers/[id]/landings" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:52:47:     at POST (src/app/api/offers/[id]/landings/route.ts:33:27)
2025-09-22T18:52:47:   31 |     // Проверяем, что оффер существует
2025-09-22T18:52:47:   32 |     const offer = await prisma.offer.findUnique({
2025-09-22T18:52:47: > 33 |       where: { id: params.id }
2025-09-22T18:52:47:      |                           ^
2025-09-22T18:52:47:   34 |     })
2025-09-22T18:52:47:   35 |     
2025-09-22T18:52:47:   36 |     if (!offer) {
2025-09-22T18:52:47: Error: Route "/api/offers/[id]/landings" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:52:47:     at POST (src/app/api/offers/[id]/landings/route.ts:44:27)
2025-09-22T18:52:47:   42 |       const existingLanding = await prisma.landing.findFirst({
2025-09-22T18:52:47:   43 |         where: {
2025-09-22T18:52:47: > 44 |           offerId: params.id,
2025-09-22T18:52:47:      |                           ^
2025-09-22T18:52:47:   45 |           type: data.type,
2025-09-22T18:52:47:   46 |           extId: data.extId,
2025-09-22T18:52:47:   47 |         }
2025-09-22T18:52:47: Error: Route "/api/offers/[id]/landings" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:52:47:     at POST (src/app/api/offers/[id]/landings/route.ts:61:25)
2025-09-22T18:52:47:   59 |     const maxOrder = await prisma.landing.findFirst({
2025-09-22T18:52:47:   60 |       where: {
2025-09-22T18:52:47: > 61 |         offerId: params.id,
2025-09-22T18:52:47:      |                         ^
2025-09-22T18:52:47:   62 |         type: data.type,
2025-09-22T18:52:47:   63 |       },
2025-09-22T18:52:47:   64 |       select: { order: true },
2025-09-22T18:52:47: Error: Route "/api/offers/[id]/landings" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:52:47:     at POST (src/app/api/offers/[id]/landings/route.ts:71:25)
2025-09-22T18:52:47:   69 |       data: {
2025-09-22T18:52:47:   70 |         ...data,
2025-09-22T18:52:47: > 71 |         offerId: params.id,
2025-09-22T18:52:47:      |                         ^
2025-09-22T18:52:47:   72 |         order: (maxOrder?.order || 0) + 10,
2025-09-22T18:52:47:   73 |       },
2025-09-22T18:52:47:   74 |       include: {
2025-09-22T18:53:09: Error: Route "/api/offers/[id]/image" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:53:09:     at POST (src/app/api/offers/[id]/image/route.ts:30:27)
2025-09-22T18:53:09:   28 |     // Проверяем, что оффер существует
2025-09-22T18:53:09:   29 |     const offer = await prisma.offer.findUnique({
2025-09-22T18:53:09: > 30 |       where: { id: params.id }
2025-09-22T18:53:09:      |                           ^
2025-09-22T18:53:09:   31 |     })
2025-09-22T18:53:09:   32 |     
2025-09-22T18:53:09:   33 |     if (!offer) {
2025-09-22T18:53:09: Error: Route "/api/offers/[id]/image" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:53:09:     at POST (src/app/api/offers/[id]/image/route.ts:65:32)
2025-09-22T18:53:09:   63 |     // Генерируем уникальное имя файла
2025-09-22T18:53:09:   64 |     const extension = path.extname(file.name)
2025-09-22T18:53:09: > 65 |     const filename = `${params.id}-${Date.now()}${extension}`
2025-09-22T18:53:09:      |                                ^
2025-09-22T18:53:09:   66 |     const filepath = path.join(uploadsDir, filename)
2025-09-22T18:53:09:   67 |
2025-09-22T18:53:09:   68 |     // Сохраняем файл
2025-09-22T18:53:10: Error: Route "/api/offers/[id]/image" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:53:10:     at POST (src/app/api/offers/[id]/image/route.ts:81:27)
2025-09-22T18:53:10:   79 |     // Обновляем оффер с новым URL изображения
2025-09-22T18:53:10:   80 |     const updatedOffer = await prisma.offer.update({
2025-09-22T18:53:10: > 81 |       where: { id: params.id },
2025-09-22T18:53:10:      |                           ^
2025-09-22T18:53:10:   82 |       data: { imageUrl },
2025-09-22T18:53:10:   83 |       include: { landings: true }
2025-09-22T18:53:10:   84 |     })
2025-09-22T18:53:10: Error: Route "/api/offers/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:53:10:     at PATCH (src/app/api/offers/[id]/route.ts:33:27)
2025-09-22T18:53:10:   31 |     // Получаем текущий оффер для аудита
2025-09-22T18:53:10:   32 |     const currentOffer = await prisma.offer.findUnique({
2025-09-22T18:53:10: > 33 |       where: { id: params.id },
2025-09-22T18:53:10:      |                           ^
2025-09-22T18:53:10:   34 |       include: { landings: true }
2025-09-22T18:53:10:   35 |     })
2025-09-22T18:53:10:   36 |     
2025-09-22T18:53:10: Error: Route "/api/offers/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:53:10:     at PATCH (src/app/api/offers/[id]/route.ts:42:27)
2025-09-22T18:53:10:   40 |     
2025-09-22T18:53:10:   41 |     const updatedOffer = await prisma.offer.update({
2025-09-22T18:53:10: > 42 |       where: { id: params.id },
2025-09-22T18:53:10:      |                           ^
2025-09-22T18:53:10:   43 |       data,
2025-09-22T18:53:10:   44 |       include: { landings: true }
2025-09-22T18:53:10:   45 |     })
2025-09-22T18:53:10: Error: Route "/api/offers/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
2025-09-22T18:53:10:     at PATCH (src/app/api/offers/[id]/route.ts:52:24)
2025-09-22T18:53:10:   50 |       action: 'update',
2025-09-22T18:53:10:   51 |       entity: 'offer',
2025-09-22T18:53:10: > 52 |       entityId: params.id,
2025-09-22T18:53:10:      |                        ^
2025-09-22T18:53:10:   53 |       before: currentOffer,
2025-09-22T18:53:10:   54 |       after: updatedOffer,
2025-09-22T18:53:10:   55 |     })
2025-09-22T19:07:41: Error creating user: Error [PrismaClientValidationError]: 
2025-09-22T19:07:41: Invalid `__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$prisma$2e$ts__$5b$app$2d$route$5d$__$28$ecmascript$29$__["prisma"].appUser.create()` invocation in
2025-09-22T19:07:41: /root/admin/.next/server/chunks/[root-of-the-server]__7e9577a5._.js:384:168
2025-09-22T19:07:41: 
2025-09-22T19:07:41:   381     });
2025-09-22T19:07:41:   382 }
2025-09-22T19:07:41:   383 // Создаем нового пользователя
2025-09-22T19:07:41: → 384 const newUser = await __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$prisma$2e$ts__$5b$app$2d$route$5d$__$28$ecmascript$29$__["prisma"].appUser.create({
2025-09-22T19:07:41:         data: {
2025-09-22T19:07:41:           email: "griha@griha.com",
2025-09-22T19:07:41:           displayName: "Griha",
2025-09-22T19:07:41:           role: "USER",
2025-09-22T19:07:41:           isBlocked: false,
2025-09-22T19:07:41:       +   passwordHash: String
2025-09-22T19:07:41:         },
2025-09-22T19:07:41:         include: {
2025-09-22T19:07:41:           _count: {
2025-09-22T19:07:41:             select: {
2025-09-22T19:07:41:               domainRequests: true
2025-09-22T19:07:41:             }
2025-09-22T19:07:41:           }
2025-09-22T19:07:41:         }
2025-09-22T19:07:41:       })
2025-09-22T19:07:41: 
2025-09-22T19:07:41: Argument `passwordHash` is missing.
2025-09-22T19:07:41:     at <unknown> (src/app/api/admin/users/route.ts:115:42)
2025-09-22T19:07:41:     at async POST (src/app/api/admin/users/route.ts:115:21)
2025-09-22T19:07:41:   113 |
2025-09-22T19:07:41:   114 |     // Создаем нового пользователя
2025-09-22T19:07:41: > 115 |     const newUser = await prisma.appUser.create({
2025-09-22T19:07:41:       |                                          ^
2025-09-22T19:07:41:   116 |       data: {
2025-09-22T19:07:41:   117 |         email: validatedData.email,
2025-09-22T19:07:41:   118 |         displayName: validatedData.displayName, {
2025-09-22T19:07:41:   clientVersion: '6.16.0'
2025-09-22T19:07:41: }
2025-09-22T19:07:49: Error creating user: Error [PrismaClientValidationError]: 
2025-09-22T19:07:49: Invalid `__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$prisma$2e$ts__$5b$app$2d$route$5d$__$28$ecmascript$29$__["prisma"].appUser.create()` invocation in
2025-09-22T19:07:49: /root/admin/.next/server/chunks/[root-of-the-server]__7e9577a5._.js:384:168
2025-09-22T19:07:49: 
2025-09-22T19:07:49:   381     });
2025-09-22T19:07:49:   382 }
2025-09-22T19:07:49:   383 // Создаем нового пользователя
2025-09-22T19:07:49: → 384 const newUser = await __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$prisma$2e$ts__$5b$app$2d$route$5d$__$28$ecmascript$29$__["prisma"].appUser.create({
2025-09-22T19:07:49:         data: {
2025-09-22T19:07:49:           email: "griha@griha.com",
2025-09-22T19:07:49:           displayName: "Griha",
2025-09-22T19:07:49:           role: "USER",
2025-09-22T19:07:49:           isBlocked: false,
2025-09-22T19:07:49:       +   passwordHash: String
2025-09-22T19:07:49:         },
2025-09-22T19:07:49:         include: {
2025-09-22T19:07:49:           _count: {
2025-09-22T19:07:49:             select: {
2025-09-22T19:07:49:               domainRequests: true
2025-09-22T19:07:49:             }
2025-09-22T19:07:49:           }
2025-09-22T19:07:49:         }
2025-09-22T19:07:49:       })
2025-09-22T19:07:49: 
2025-09-22T19:07:49: Argument `passwordHash` is missing.
2025-09-22T19:07:49:     at <unknown> (src/app/api/admin/users/route.ts:115:42)
2025-09-22T19:07:49:     at async POST (src/app/api/admin/users/route.ts:115:21)
2025-09-22T19:07:49:   113 |
2025-09-22T19:07:49:   114 |     // Создаем нового пользователя
2025-09-22T19:07:49: > 115 |     const newUser = await prisma.appUser.create({
2025-09-22T19:07:49:       |                                          ^
2025-09-22T19:07:49:   116 |       data: {
2025-09-22T19:07:49:   117 |         email: validatedData.email,
2025-09-22T19:07:49:   118 |         displayName: validatedData.displayName, {
2025-09-22T19:07:49:   clientVersion: '6.16.0'
2025-09-22T19:07:49: }
2025-09-22T20:12:30:  ⚠ Cross origin request detected from jliga.live to /_next/* resource. In a future major version of Next.js, you will need to explicitly configure "allowedDevOrigins" in next.config to allow this.
2025-09-22T20:12:30: Read more: https://nextjs.org/docs/app/api-reference/config/next-config-js/allowedDevOrigins
2025-09-22T20:12:47: Error creating user: Error [PrismaClientValidationError]: 
2025-09-22T20:12:47: Invalid `__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$prisma$2e$ts__$5b$app$2d$route$5d$__$28$ecmascript$29$__["prisma"].appUser.create()` invocation in
2025-09-22T20:12:47: /root/admin/.next/server/chunks/[root-of-the-server]__7e9577a5._.js:384:168
2025-09-22T20:12:47: 
2025-09-22T20:12:47:   381     });
2025-09-22T20:12:47:   382 }
2025-09-22T20:12:47:   383 // Создаем нового пользователя
2025-09-22T20:12:47: → 384 const newUser = await __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$prisma$2e$ts__$5b$app$2d$route$5d$__$28$ecmascript$29$__["prisma"].appUser.create({
2025-09-22T20:12:47:         data: {
2025-09-22T20:12:47:           email: "griha@griha.com",
2025-09-22T20:12:47:           displayName: "Griha",
2025-09-22T20:12:47:           role: "USER",
2025-09-22T20:12:47:           isBlocked: false,
2025-09-22T20:12:47:       +   passwordHash: String
2025-09-22T20:12:47:         },
2025-09-22T20:12:47:         include: {
2025-09-22T20:12:47:           _count: {
2025-09-22T20:12:47:             select: {
2025-09-22T20:12:47:               domainRequests: true
2025-09-22T20:12:47:             }
2025-09-22T20:12:47:           }
2025-09-22T20:12:47:         }
2025-09-22T20:12:47:       })
2025-09-22T20:12:47: 
2025-09-22T20:12:47: Argument `passwordHash` is missing.
2025-09-22T20:12:47:     at <unknown> (src/app/api/admin/users/route.ts:115:42)
2025-09-22T20:12:47:     at async POST (src/app/api/admin/users/route.ts:115:21)
2025-09-22T20:12:47:   113 |
2025-09-22T20:12:47:   114 |     // Создаем нового пользователя
2025-09-22T20:12:47: > 115 |     const newUser = await prisma.appUser.create({
2025-09-22T20:12:47:       |                                          ^
2025-09-22T20:12:47:   116 |       data: {
2025-09-22T20:12:47:   117 |         email: validatedData.email,
2025-09-22T20:12:47:   118 |         displayName: validatedData.displayName, {
2025-09-22T20:12:47:   clientVersion: '6.16.0'
2025-09-22T20:12:47: }
2025-09-22T20:17:38:  ⚠ Cross origin request detected from jliga.live to /_next/* resource. In a future major version of Next.js, you will need to explicitly configure "allowedDevOrigins" in next.config to allow this.
2025-09-22T20:17:38: Read more: https://nextjs.org/docs/app/api-reference/config/next-config-js/allowedDevOrigins
2025-09-22T20:20:06:  ⚠ Cross origin request detected from jliga.live to /_next/* resource. In a future major version of Next.js, you will need to explicitly configure "allowedDevOrigins" in next.config to allow this.
2025-09-22T20:20:06: Read more: https://nextjs.org/docs/app/api-reference/config/next-config-js/allowedDevOrigins
2025-09-25T22:13:34:  ⨯ [Error: Could not load the "sharp" module using the linux-x64 runtime
2025-09-25T22:13:34: Unsupported CPU: Prebuilt binaries for linux-x64 require v2 microarchitecture
2025-09-25T22:13:34: Possible solutions:
2025-09-25T22:13:34: - Ensure optional dependencies can be installed:
2025-09-25T22:13:34:     npm install --include=optional sharp
2025-09-25T22:13:34: - Ensure your package manager supports multi-platform installation:
2025-09-25T22:13:34:     See https://sharp.pixelplumbing.com/install#cross-platform
2025-09-25T22:13:34: - Add platform-specific dependencies:
2025-09-25T22:13:34:     npm install --os=linux --cpu=x64 sharp
2025-09-25T22:13:34: - Consult the installation documentation:
2025-09-25T22:13:34:     See https://sharp.pixelplumbing.com/install]
2025-09-25T22:13:55:  ⨯ [Error: Could not load the "sharp" module using the linux-x64 runtime
2025-09-25T22:13:55: Unsupported CPU: Prebuilt binaries for linux-x64 require v2 microarchitecture
2025-09-25T22:13:55: Possible solutions:
2025-09-25T22:13:55: - Ensure optional dependencies can be installed:
2025-09-25T22:13:55:     npm install --include=optional sharp
2025-09-25T22:13:55: - Ensure your package manager supports multi-platform installation:
2025-09-25T22:13:55:     See https://sharp.pixelplumbing.com/install#cross-platform
2025-09-25T22:13:55: - Add platform-specific dependencies:
2025-09-25T22:13:55:     npm install --os=linux --cpu=x64 sharp
2025-09-25T22:13:55: - Consult the installation documentation:
2025-09-25T22:13:55:     See https://sharp.pixelplumbing.com/install]
2025-09-25T22:14:30:  ⨯ [Error: Could not load the "sharp" module using the linux-x64 runtime
2025-09-25T22:14:30: Unsupported CPU: Prebuilt binaries for linux-x64 require v2 microarchitecture
2025-09-25T22:14:30: Possible solutions:
2025-09-25T22:14:30: - Ensure optional dependencies can be installed:
2025-09-25T22:14:30:     npm install --include=optional sharp
2025-09-25T22:14:30: - Ensure your package manager supports multi-platform installation:
2025-09-25T22:14:30:     See https://sharp.pixelplumbing.com/install#cross-platform
2025-09-25T22:14:30: - Add platform-specific dependencies:
2025-09-25T22:14:30:     npm install --os=linux --cpu=x64 sharp
2025-09-25T22:14:30: - Consult the installation documentation:
2025-09-25T22:14:30:     See https://sharp.pixelplumbing.com/install]
2025-09-25T22:14:36:  ⨯ [Error: Could not load the "sharp" module using the linux-x64 runtime
2025-09-25T22:14:36: Unsupported CPU: Prebuilt binaries for linux-x64 require v2 microarchitecture
2025-09-25T22:14:36: Possible solutions:
2025-09-25T22:14:36: - Ensure optional dependencies can be installed:
2025-09-25T22:14:36:     npm install --include=optional sharp
2025-09-25T22:14:36: - Ensure your package manager supports multi-platform installation:
2025-09-25T22:14:36:     See https://sharp.pixelplumbing.com/install#cross-platform
2025-09-25T22:14:36: - Add platform-specific dependencies:
2025-09-25T22:14:36:     npm install --os=linux --cpu=x64 sharp
2025-09-25T22:14:36: - Consult the installation documentation:
2025-09-25T22:14:36:     See https://sharp.pixelplumbing.com/install]
2025-09-25T22:14:47:  ⨯ [Error: Could not load the "sharp" module using the linux-x64 runtime
2025-09-25T22:14:47: Unsupported CPU: Prebuilt binaries for linux-x64 require v2 microarchitecture
2025-09-25T22:14:47: Possible solutions:
2025-09-25T22:14:47: - Ensure optional dependencies can be installed:
2025-09-25T22:14:47:     npm install --include=optional sharp
2025-09-25T22:14:47: - Ensure your package manager supports multi-platform installation:
2025-09-25T22:14:47:     See https://sharp.pixelplumbing.com/install#cross-platform
2025-09-25T22:14:47: - Add platform-specific dependencies:
2025-09-25T22:14:47:     npm install --os=linux --cpu=x64 sharp
2025-09-25T22:14:47: - Consult the installation documentation:
2025-09-25T22:14:47:     See https://sharp.pixelplumbing.com/install]
2025-09-25T22:14:57:  ⨯ [Error: Could not load the "sharp" module using the linux-x64 runtime
2025-09-25T22:14:57: Unsupported CPU: Prebuilt binaries for linux-x64 require v2 microarchitecture
2025-09-25T22:14:57: Possible solutions:
2025-09-25T22:14:57: - Ensure optional dependencies can be installed:
2025-09-25T22:14:57:     npm install --include=optional sharp
2025-09-25T22:14:57: - Ensure your package manager supports multi-platform installation:
2025-09-25T22:14:57:     See https://sharp.pixelplumbing.com/install#cross-platform
2025-09-25T22:14:57: - Add platform-specific dependencies:
2025-09-25T22:14:57:     npm install --os=linux --cpu=x64 sharp
2025-09-25T22:14:57: - Consult the installation documentation:
2025-09-25T22:14:57:     See https://sharp.pixelplumbing.com/install]
2025-09-25T22:21:57:  ⨯ [Error: Could not load the "sharp" module using the linux-x64 runtime
2025-09-25T22:21:57: Unsupported CPU: Prebuilt binaries for linux-x64 require v2 microarchitecture
2025-09-25T22:21:57: Possible solutions:
2025-09-25T22:21:57: - Ensure optional dependencies can be installed:
2025-09-25T22:21:57:     npm install --include=optional sharp
2025-09-25T22:21:57: - Ensure your package manager supports multi-platform installation:
2025-09-25T22:21:57:     See https://sharp.pixelplumbing.com/install#cross-platform
2025-09-25T22:21:57: - Add platform-specific dependencies:
2025-09-25T22:21:57:     npm install --os=linux --cpu=x64 sharp
2025-09-25T22:21:57: - Consult the installation documentation:
2025-09-25T22:21:57:     See https://sharp.pixelplumbing.com/install]
2025-09-25T22:23:14:  ⨯ [Error: Could not load the "sharp" module using the linux-x64 runtime
2025-09-25T22:23:14: Unsupported CPU: Prebuilt binaries for linux-x64 require v2 microarchitecture
2025-09-25T22:23:14: Possible solutions:
2025-09-25T22:23:14: - Ensure optional dependencies can be installed:
2025-09-25T22:23:14:     npm install --include=optional sharp
2025-09-25T22:23:14: - Ensure your package manager supports multi-platform installation:
2025-09-25T22:23:14:     See https://sharp.pixelplumbing.com/install#cross-platform
2025-09-25T22:23:14: - Add platform-specific dependencies:
2025-09-25T22:23:14:     npm install --os=linux --cpu=x64 sharp
2025-09-25T22:23:14: - Consult the installation documentation:
2025-09-25T22:23:14:     See https://sharp.pixelplumbing.com/install]
2025-09-25T22:23:45:  ⨯ [Error: Could not load the "sharp" module using the linux-x64 runtime
2025-09-25T22:23:45: Unsupported CPU: Prebuilt binaries for linux-x64 require v2 microarchitecture
2025-09-25T22:23:45: Possible solutions:
2025-09-25T22:23:45: - Ensure optional dependencies can be installed:
2025-09-25T22:23:45:     npm install --include=optional sharp
2025-09-25T22:23:45: - Ensure your package manager supports multi-platform installation:
2025-09-25T22:23:45:     See https://sharp.pixelplumbing.com/install#cross-platform
2025-09-25T22:23:45: - Add platform-specific dependencies:
2025-09-25T22:23:45:     npm install --os=linux --cpu=x64 sharp
2025-09-25T22:23:45: - Consult the installation documentation:
2025-09-25T22:23:45:     See https://sharp.pixelplumbing.com/install]
2025-09-25T22:28:05:  ⨯ [Error: Could not load the "sharp" module using the linux-x64 runtime
2025-09-25T22:28:05: Unsupported CPU: Prebuilt binaries for linux-x64 require v2 microarchitecture
2025-09-25T22:28:05: Possible solutions:
2025-09-25T22:28:05: - Ensure optional dependencies can be installed:
2025-09-25T22:28:05:     npm install --include=optional sharp
2025-09-25T22:28:05: - Ensure your package manager supports multi-platform installation:
2025-09-25T22:28:05:     See https://sharp.pixelplumbing.com/install#cross-platform
2025-09-25T22:28:05: - Add platform-specific dependencies:
2025-09-25T22:28:05:     npm install --os=linux --cpu=x64 sharp
2025-09-25T22:28:05: - Consult the installation documentation:
2025-09-25T22:28:05:     See https://sharp.pixelplumbing.com/install]
2025-09-25T22:29:01:  ⨯ [Error: Could not load the "sharp" module using the linux-x64 runtime
2025-09-25T22:29:01: Unsupported CPU: Prebuilt binaries for linux-x64 require v2 microarchitecture
2025-09-25T22:29:01: Possible solutions:
2025-09-25T22:29:01: - Ensure optional dependencies can be installed:
2025-09-25T22:29:01:     npm install --include=optional sharp
2025-09-25T22:29:01: - Ensure your package manager supports multi-platform installation:
2025-09-25T22:29:01:     See https://sharp.pixelplumbing.com/install#cross-platform
2025-09-25T22:29:01: - Add platform-specific dependencies:
2025-09-25T22:29:01:     npm install --os=linux --cpu=x64 sharp
2025-09-25T22:29:01: - Consult the installation documentation:
2025-09-25T22:29:01:     See https://sharp.pixelplumbing.com/install]
2025-09-25T22:29:25:  ⨯ [Error: Could not load the "sharp" module using the linux-x64 runtime
2025-09-25T22:29:25: Unsupported CPU: Prebuilt binaries for linux-x64 require v2 microarchitecture
2025-09-25T22:29:25: Possible solutions:
2025-09-25T22:29:25: - Ensure optional dependencies can be installed:
2025-09-25T22:29:25:     npm install --include=optional sharp
2025-09-25T22:29:25: - Ensure your package manager supports multi-platform installation:
2025-09-25T22:29:25:     See https://sharp.pixelplumbing.com/install#cross-platform
2025-09-25T22:29:25: - Add platform-specific dependencies:
2025-09-25T22:29:25:     npm install --os=linux --cpu=x64 sharp
2025-09-25T22:29:25: - Consult the installation documentation:
2025-09-25T22:29:25:     See https://sharp.pixelplumbing.com/install]
2025-09-26T14:47:17: [next-auth][error][INVALID_CALLBACK_URL_ERROR] 
2025-09-26T14:47:17: https://next-auth.js.org/errors#invalid_callback_url_error Invalid callback URL. Received: %2F InvalidCallbackUrl: Invalid callback URL. Received: %2F
2025-09-26T14:47:17:     at b.assertConfig (.next/server/chunks/7698.js:10:64020)
2025-09-26T14:47:17:     at q (.next/server/chunks/7698.js:10:33654)
2025-09-26T14:47:17:     at async g (.next/server/chunks/7698.js:1:1893)
2025-09-26T14:47:17:     at async a.length.b (.next/server/chunks/7698.js:1:3334)
2025-09-26T14:47:17:     at async k (.next/server/app/api/auth/[...nextauth]/route.js:1:4266)
2025-09-26T14:47:17:     at async g (.next/server/app/api/auth/[...nextauth]/route.js:1:5269) {
2025-09-26T14:47:17:   code: 'INVALID_CALLBACK_URL_ERROR'
2025-09-26T14:47:17: }
2025-09-29 22:21:08 +08:00: [Error: Could not find a production build in the '.next' directory. Try building your app with 'next build' before starting the production server. https://nextjs.org/docs/messages/production-start-no-build-id]
2025-09-29 22:21:08 +08:00: [Error: Could not find a production build in the '.next' directory. Try building your app with 'next build' before starting the production server. https://nextjs.org/docs/messages/production-start-no-build-id]
2025-09-29 22:21:09 +08:00: [Error: Could not find a production build in the '.next' directory. Try building your app with 'next build' before starting the production server. https://nextjs.org/docs/messages/production-start-no-build-id]
2025-09-29 22:21:10 +08:00: [Error: Could not find a production build in the '.next' directory. Try building your app with 'next build' before starting the production server. https://nextjs.org/docs/messages/production-start-no-build-id]
2025-09-29 22:21:11 +08:00: [Error: Could not find a production build in the '.next' directory. Try building your app with 'next build' before starting the production server. https://nextjs.org/docs/messages/production-start-no-build-id]
2025-09-29 22:21:12 +08:00: [Error: Could not find a production build in the '.next' directory. Try building your app with 'next build' before starting the production server. https://nextjs.org/docs/messages/production-start-no-build-id]
2025-09-29 22:21:13 +08:00: [Error: Could not find a production build in the '.next' directory. Try building your app with 'next build' before starting the production server. https://nextjs.org/docs/messages/production-start-no-build-id]
2025-09-29 22:21:14 +08:00: [Error: Could not find a production build in the '.next' directory. Try building your app with 'next build' before starting the production server. https://nextjs.org/docs/messages/production-start-no-build-id]
2025-09-29 22:21:15 +08:00: [Error: Could not find a production build in the '.next' directory. Try building your app with 'next build' before starting the production server. https://nextjs.org/docs/messages/production-start-no-build-id]
2025-09-29 22:21:16 +08:00: [Error: Could not find a production build in the '.next' directory. Try building your app with 'next build' before starting the production server. https://nextjs.org/docs/messages/production-start-no-build-id]
